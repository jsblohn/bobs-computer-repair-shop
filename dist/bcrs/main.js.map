{"version":3,"sources":["./src/app/pages/verify-security-questions-form/verify-security-questions-form.component.ts","./src/app/pages/verify-security-questions-form/verify-security-questions-form.component.html","./src/app/pages/home/home.component.ts","./src/app/pages/home/home.component.html","./src/app/shared/role.service.ts","./src/app/pages/reset-password-form/reset-password-form.component.ts","./src/app/pages/reset-password-form/reset-password-form.component.html","./src/app/shared/auth-layout/auth-layout.component.ts","./src/app/shared/auth-layout/auth-layout.component.html","./src/app/pages/purchases-by-service-graph/purchases-by-service-graph.component.ts","./src/app/pages/purchases-by-service-graph/purchases-by-service-graph.component.html","./src/app/pages/role-create/role-create.component.ts","./src/app/pages/role-create/role-create.component.html","./src/app/pages/user-list/user-list.component.ts","./src/app/pages/user-list/user-list.component.html","./src/app/pages/server-error/server-error.component.ts","./src/app/pages/server-error/server-error.component.html","./src/environments/environment.ts","./src/app/shared/user.service.ts","./src/app/shared/auth.guard.ts","./src/app/pages/user-create/user-create.component.ts","./src/app/pages/user-create/user-create.component.html","./src/app/dialog/invoice-summary-dialog/invoice-summary-dialog.component.ts","./src/app/dialog/invoice-summary-dialog/invoice-summary-dialog.component.html","./src/app/pages/user-details/user-details.component.ts","./src/app/pages/user-details/user-details.component.html","./node_modules/moment/locale sync ^\\.\\/.*$","./src/app/app.component.ts","./src/app/pages/orders/orders.component.ts","./src/app/pages/orders/orders.component.html","./src/app/pages/signin/signin.component.ts","./src/app/pages/signin/signin.component.html","./src/app/app.module.ts","./src/app/shared/security-question.service.ts","./src/app/shared/error.interceptor.ts","./src/app/shared/role.guard.ts","./src/app/pages/site-maintenance/site-maintenance.component.ts","./src/app/pages/site-maintenance/site-maintenance.component.html","./src/app/pages/security-question-details/security-question-details.component.ts","./src/app/pages/security-question-details/security-question-details.component.html","./src/app/pages/register/register.component.ts","./src/app/pages/register/register.component.html","./src/app/pages/repair-services/repair-services.component.ts","./src/app/pages/repair-services/repair-services.component.html","./src/app/shared/invoice.service.ts","./src/app/pages/role-list/role-list.component.ts","./src/app/pages/role-list/role-list.component.html","./src/app/shared/delete-record-dialog/delete-record-dialog.component.ts","./src/app/shared/delete-record-dialog/delete-record-dialog.component.html","./src/app/pages/security-question-list/security-question-list.component.ts","./src/app/pages/security-question-list/security-question-list.component.html","./src/app/pages/role-details/role-details.component.ts","./src/app/pages/role-details/role-details.component.html","./src/app/pages/about/about.component.ts","./src/app/pages/about/about.component.html","./src/app/pages/security-question-create/security-question-create.component.ts","./src/app/pages/security-question-create/security-question-create.component.html","./src/app/shared/base-layout/base-layout.component.ts","./src/app/shared/base-layout/base-layout.component.html","./src/app/pages/not-found/not-found.component.ts","./src/app/pages/not-found/not-found.component.html","./src/app/app-routing.module.ts","./src/app/shared/service-repair.service.ts","./src/app/pages/verify-username-form/verify-username-form.component.ts","./src/app/pages/verify-username-form/verify-username-form.component.html","./src/app/pages/error/error.component.ts","./src/app/pages/error/error.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["/*\r\n============================================\r\n; Title:  verify-security-questions-form.component.ts\r\n; Authors: Nicole Forke, Janet Blohn, and Joann Saeou\r\n; Date:   14 November 2020\r\n; Added By: Janet Blohn\r\n; Description: Bob's Computer Repair Services Project\r\n; Typescript for VerifySecurityQuestionsForm Component\r\n============================================\r\n*/\r\n\r\n/* Import required modules from Angular */\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { SelectedSecurityQuestions } from '../../shared/selectedSecurityQuestions.interface';\r\n\r\n@Component({\r\n  selector: 'app-verify-security-questions-form',\r\n  templateUrl: './verify-security-questions-form.component.html',\r\n  styleUrls: ['./verify-security-questions-form.component.css']\r\n})\r\nexport class VerifySecurityQuestionsFormComponent implements OnInit {\r\n  selectedSecurityQuestions: SelectedSecurityQuestions [];\r\n  question1: string;\r\n  question2: string;\r\n  question3: string;\r\n  userName: string;\r\n  form: FormGroup;\r\n  errorMessage: string; // added by Nicole Forke\r\n\r\n  constructor(private route: ActivatedRoute, private http: HttpClient, private fb: FormBuilder, private router: Router) {\r\n    this.userName = this.route.snapshot.queryParamMap.get('userName');\r\n    console.log(this.userName);\r\n\r\n      this.http.get('/api/users/' + this.userName + '/selectedSecurityQuestions').subscribe(res => {\r\n      this.selectedSecurityQuestions = res['data'];\r\n      console.log(\"these are the selected questions\");\r\n      console.log(this.selectedSecurityQuestions);\r\n      console.log(res);\r\n    }, err => {\r\n      console.log(err);\r\n    }, () => {\r\n      this.question1 = this.selectedSecurityQuestions[0].questionText;\r\n      this.question2 = this.selectedSecurityQuestions[1].questionText;\r\n      this.question3 = this.selectedSecurityQuestions[2].questionText;\r\n\r\n      console.log(this.question1);\r\n      console.log(this.question2);\r\n      console.log(this.question3);\r\n    });\r\n   }\r\n\r\n  ngOnInit() {\r\n\r\n    this.form = this.fb.group({\r\n      answerToSecurityQuestion1: [null, Validators.compose([Validators.required])],\r\n      answerToSecurityQuestion2: [null, Validators.compose([Validators.required])],\r\n      answerToSecurityQuestion3: [null, Validators.compose([Validators.required])]\r\n    });\r\n  }\r\n\r\n  verifySecurityQuestions() {\r\n    const answerToSecurityQuestion1 = this.form.controls['answerToSecurityQuestion1'].value;\r\n    const answerToSecurityQuestion2 = this.form.controls['answerToSecurityQuestion2'].value;\r\n    const answerToSecurityQuestion3 = this.form.controls['answerToSecurityQuestion3'].value;\r\n\r\n    console.log(answerToSecurityQuestion1);\r\n    console.log(answerToSecurityQuestion2);\r\n    console.log(answerToSecurityQuestion3);\r\n\r\n    this.http.post('/api/session/verify/users/' + this.userName + '/selectedSecurityQuestions', {\r\n\r\n      questionText1: this.question1,\r\n      questionText2: this.question2,\r\n      questionText3: this.question3,\r\n\r\n      answerText1: answerToSecurityQuestion1,\r\n      answerText2: answerToSecurityQuestion2,\r\n      answerText3: answerToSecurityQuestion3\r\n      }).subscribe(res => {\r\n        console.log(res);\r\n        if (res['message'] === 'success') {\r\n          console.log(\"you are here\");\r\n         this.router.navigate(['/session/reset-password'], {queryParams: {isAuthenticated: 'true', userName: this.userName}, skipLocationChange: true});\r\n        } else {\r\n          this.errorMessage = \"Unable to verify security question answers. Please try again.\"; // added by Nicole Forke\r\n          console.log('Unable to verify security question answers');\r\n        }\r\n      });\r\n  }\r\n}\r\n","<!--\r\n=============================================================\r\n Title:  verify-security-questions-form.component.html\r\n * Modifiers: Nicole Forke, Janet Blohn, Joann Saeou\r\n * Date: 10/30/2020\r\n * Description: Bobs Computer Repair Services\r\n * HTML for the VerifySecurityQuestionsForm Component\r\n ============================================\r\n * Added 10/30/20 Janet Blohn\r\n=============================================================\r\n-->\r\n<br /> <br />\r\n<div fxLayout=\"row wrap\" fxLayoutAlign=\"center start\">\r\n  <div fxFlex.gt-sm=\"55\" fxFlex=\"100\">\r\n    <mat-card style=\"width: 80%;\" class=\"mat-card-top pa-0\">\r\n      <mat-card-title style=\"text-align: center; font-size: 24px; font-weight: lighter;\"\r\n                      class=\"mat-headline\">Verify Security Questions</mat-card-title>\r\n\r\n      <br/> <br/>\r\n\r\n      <form *ngIf=\"selectedSecurityQuestions\" [formGroup]=\"form\" (ngSubmit)=\"verifySecurityQuestions()\" #userNameForm>\r\n        <mat-card-content fxLayout=\"column\">\r\n\r\n         <mat-list>\r\n           <mat-list-item>\r\n             {{ question1 }} &nbsp; &nbsp;\r\n             <mat-form-field fxFlex>\r\n                <input matInput\r\n                    [formControl]=\"form.controls['answerToSecurityQuestion1']\"\r\n                    placeholder=\"Answer 1\"/>\r\n              </mat-form-field>\r\n            </mat-list-item>\r\n\r\n            <mat-list-item>\r\n              {{ question2 }} &nbsp; &nbsp;\r\n              <mat-form-field fxFlex>\r\n                <input matInput\r\n                    [formControl]=\"form.controls['answerToSecurityQuestion2']\"\r\n                    placeholder=\"Answer 2\"/>\r\n              </mat-form-field>\r\n            </mat-list-item>\r\n\r\n            <mat-list-item>\r\n              {{ question3 }} &nbsp; &nbsp;\r\n             <mat-form-field fxFlex>\r\n               <input matInput\r\n                    [formControl]=\"form.controls['answerToSecurityQuestion3']\"\r\n                    placeholder=\"Answer 3\"/>\r\n              </mat-form-field>\r\n            </mat-list-item>\r\n         </mat-list>\r\n         <div class=\"msg-error\" style=\"color: #d8000c;\" *ngIf=\"errorMessage\"> {{ errorMessage }}</div>\r\n\r\n          <br/><br/>\r\n          <div fxFlex fxLayoutAlign=\"end\">\r\n            <button mat-raised-button style=\"background-color: #04B504\" color=\"#000000\">Submit</button>\r\n          </div>\r\n        </mat-card-content>\r\n      </form>\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","/*\r\n===================================================\r\n* Title: home.component.ts\r\n* Author: Professor Krasso\r\n* Date: 23 October 2020\r\n* Modifiers: Joann Saeou, Janet Blohn, Verlee Washington, Nicole Forke\r\n* Description: Group 1: Sprint 1 BCRS - user  API routing\r\n===================================================\r\n*/\r\n\r\n/**\r\n * Import statements\r\n */\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\n\r\n/**\r\n * Export component\r\n */\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div fxLayout=\"column\" class=\"main-welcome\" color=\"primary\">\r\n    <br /><br />\r\n    <h1 class=\"title\">\r\n        Welcome to Bob's Computer Repair Shop!</h1>\r\n    <br /><br />\r\n    <h2><strong>\r\n        Your one stop shop for all your computer repair needs.\r\n    </strong>\r\n    </h2>\r\n    <br /><br />\r\n    <div class=\"row\">\r\n        <div class=\"home-body col-sm-12\">\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col\"></th>\r\n                        <th scope=\"col\">\r\n                            <h3><strong>We provide the following services:</strong></h3>\r\n                        </th>\r\n                        <th scope=\"col\"></th>\r\n                    </tr>\r\n\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td scope=\"row\" style=\"width: 8%;\">Password Resets:</td>\r\n                        <td style=\"width: 46%; text-align: left\">Lost or forgot your password?</td>\r\n                        <td style=\"width: 46%; text-align: left\">No problem - we can reset it for you.</td>\r\n                    </tr>\r\n\r\n                    <tr>\r\n                        <td scope=\"row\" style=\"width: 10%;\">Spyware Removal:</td>\r\n                        <td style=\"width: 35%; text-align: left\">Uh oh, something you clicked on is now spying on you?</td>\r\n                        <td style=\"width: 35%; text-align: left\">Don't worry we can remove it.</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td scope=\"row\" style=\"width: 10%;\">RAM Upgrades:</td>\r\n                        <td style=\"width: 35%; text-align: left\">Has your computer slowed down?</td>\r\n                        <td style=\"width: 35%; text-align: left\">Sounds like you need a RAM upgrade.</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td scope=\"row\" style=\"width: 10%;\">Software Installations:</td>\r\n                        <td style=\"width: 40%; text-align: left\">Purchase some new software and have no clue how to install it?</td>\r\n                        <td style=\"width: 40%; text-align: left\">No worries, we'll install it for you.</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td scope=\"row\" style=\"width: 10%; text-align: left\">\r\n                            Tune-ups:\r\n                        </td>\r\n                        <td scope=\"row\" style=\"width: 35%; text-align: left\">\r\n                            Computer isn't performing like it used to?\r\n\r\n                        </td>\r\n                        <td scope=\"row\" style=\"width: 35%; text-align: left\">\r\n                            We can help, all you need is a tune-up!\r\n\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td scope=\"row\" style=\"width: 20%; text-align: left\">Keyboard Cleaning:</td>\r\n\r\n                        <td scope=\"row\" style=\"width: 35%; text-align: left\">Clicking buttons and they don't pop back up?</td>\r\n                        <td scope=\"row\" style=\"width: 35%; text-align: left\"> Sounds like your keyboard needs a good cleaning.</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td scope=\"row\" style=\"width: 20%; text-align: left\">Disk Clean-up:</td>\r\n                        <td scope=\"row\" style=\"width: 35%; text-align: left\">Have some junk on your hard disk?</td>\r\n                        <td scope=\"row\" style=\"width: 35%; text-align: left\">Let us clean it up for you!</td>\r\n                    </tr>\r\n\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </div>\r\n    <br /><br /><br />\r\n\r\n    <!--<p>In order for us to help, simply login and we'll get started. No account? Please click the\r\n       <button mat-button class=\"navbar-link\" routerLink=\"/session/signin\" mat-button>Login</button> link to create a new account.</p>-->\r\n    <p>In order for us to help, simply login and we'll get started. No account? Please click\r\n        <a routerLink=\"/session/signin\" class=\"here-link\"><strong>here</strong></a> or the Log In link above to create a new account.</p>\r\n","/*\r\n============================================\r\n; Title: role.service.ts\r\n; Author: Joann Saeou\r\n; Date:   05 November 2020\r\n; Description: BCRS project\r\n; Roles service; finds, defines, updates and deletes roles for Bob's Computer Service\r\n============================================\r\n*/\r\n\r\n\r\n/* Import required modules from Angular */\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\n/* Import required application files */\r\nimport { Role } from '../shared/role.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RoleService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  findAllRoles(): Observable<any> {\r\n    return this.http.get('/api/roles');\r\n  }\r\n\r\n  findRoleById(roleId: string): Observable<any> {\r\n    return this.http.get('/api/roles/' + roleId);\r\n  }\r\n\r\n  createRole(role: Role): Observable<any> {\r\n    return this.http.post('/api/roles', {\r\n      text: role.text\r\n    })\r\n  }\r\n\r\n  updateRole(roleId: string, role: Role): Observable<any> {\r\n    return this.http.put('/api/roles/' + roleId, {\r\n      text: role.text\r\n    })\r\n  }\r\n\r\n  deleteRole(roleId: string): Observable<any> {\r\n    return this.http.delete('/api/roles/' + roleId);\r\n  }\r\n\r\n    findUserRole(userName: string): Observable<any> {\r\n      return this.http.get('/api/users/' + userName + '/role');\r\n\r\n    }\r\n  }\r\n","/*\r\n============================================\r\n; Title:  reset-password-form.component.ts\r\n; Authors: Nicole Forke, Janet Blohn, and Joann Saeou\r\n; Date:   29 October 2020\r\n; Added By: Nicole Forke\r\n; Description: Bob's Computer Repair Services Project\r\n; Typescript for Reset Password Form Component\r\n============================================\r\n*/\r\n\r\n/**\r\n * Import statements\r\n */\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { CookieService } from 'ngx-cookie-service';\r\n\r\n@Component({\r\n  selector: 'app-reset-password-form',\r\n  templateUrl: './reset-password-form.component.html',\r\n  styleUrls: ['./reset-password-form.component.css']\r\n})\r\n/**\r\n * Export component\r\n */\r\nexport class ResetPasswordFormComponent implements OnInit {\r\n\r\n  isAuthenticated: string;\r\n  username: string;\r\n  form: FormGroup;\r\n  errorMessage: string;\r\n\r\n  constructor(private http: HttpClient, private route: ActivatedRoute, private router: Router, private fb: FormBuilder, private cookieService: CookieService) {\r\n    this.isAuthenticated = this.route.snapshot.queryParamMap.get('isAuthenticated');\r\n    this.username = this.route.snapshot.queryParamMap.get('userName');\r\n\r\n    if (!this.isAuthenticated) {\r\n      this.router.navigate(['/session/signin']);\r\n    }\r\n   }\r\n\r\n  ngOnInit() {\r\n    this.form = this.fb.group({\r\n\r\n      // the password field must contain minimun of 7 characters long and atleast 1 uppercase, 1 number, and 1 symbol for validation to work\r\n      password: [null, Validators.compose([\r\n        Validators.required,\r\n        Validators.minLength(8),\r\n        Validators.pattern('(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])[A-Za-z\\d$@$!%*?&].{8,}')\r\n      ])]\r\n    });\r\n  }\r\n\r\n/**\r\n * Function to reset password\r\n */\r\n  resetPassword() {\r\n    this.http.post('/api/session/users/' + this.username + '/password', {\r\n\r\n      password: this.form.controls['password'].value\r\n    }).subscribe(res => {\r\n      if (res) {\r\n      /**\r\n       * User is authenticated and we can grant them access\r\n       */\r\n      this.cookieService.set('sessionUser', this.username, 1);\r\n      this.router.navigate(['/repair-services']);\r\n      } else {\r\n        this.errorMessage = 'Password must contain at least one uppercase letter, one number, and be 8 characters long.';\r\n      }\r\n    }, err => {\r\n      console.log('error message', err);\r\n    });\r\n  }\r\n}\r\n","<br /> <br />\r\n<div fxLayout=\"row wrap\" fxLayoutAlign=\"center start\">\r\n    <br /> <br />\r\n    <div fxFlex.gt-sm=\"55\" fxFlex=\"100\">\r\n        <mat-card style=\"width: 80%;\" class=\"mat-card-top pa-0\">\r\n            <mat-card-title style=\"text-align: center; font-size: 48px; font-weight: lighter;\" class=\"mat-headline\">Change Password\r\n            </mat-card-title>\r\n            <br /><br />\r\n\r\n            <form [formGroup]=\"form\" (ngSubmit)=\"resetPassword()\" #resetPasswordForm>\r\n                <mat-card-content fxLayout=\"column\">\r\n                    <mat-form-field fxFlex>\r\n                        <input matInput type=\"password\" [formControl]=\"form.controls['password']\" placeholder=\"New password\" />\r\n\r\n                        <div style=\"color: #d8000d;\" *ngIf=\"errorMessage\"> {{ errorMessage }}\r\n                        </div>\r\n                        <div style=\"font-size: 9pt; position: absolute; bottom: -1rem;\">*Password must contain 8 characters, one uppercase, lowercase character and one number.</div>\r\n                    </mat-form-field>\r\n\r\n                    <br /><br />\r\n                    <div fxFlex fxLayoutAlign=\"end\">\r\n                        <button mat-raised-button style=\"background-color: #04B504\" [disabled]=\"!form.valid\" color=\"#000000\">Submit</button>\r\n                    </div>\r\n                </mat-card-content>\r\n            </form>\r\n        </mat-card>\r\n    </div>\r\n</div>","/**\r\n * ======================================================================\r\n * Title: Bob's Computer Repair Shop Capstone\r\n * Author: Nicole Forke, Janet Blohn, Verlee Washington, and Joann Saeou\r\n * Date: 10/25/2020\r\n * Description: Auth Layout Component\r\n * ======================================================================\r\n */\r\n\r\n /**\r\n  * Import statements\r\n  */\r\n import { Component, OnInit } from '@angular/core';\r\n\r\n @Component({\r\n   selector: 'app-auth-layout',\r\n   templateUrl: './auth-layout.component.html',\r\n   styleUrls: ['./auth-layout.component.css']\r\n })\r\n \r\n /**\r\n  * Export component\r\n  */\r\n export class AuthLayoutComponent implements OnInit {\r\n \r\n   constructor() { }\r\n \r\n   ngOnInit(): void {\r\n   }\r\n \r\n }\r\n ","<router-outlet></router-outlet>\r\n","/**\r\n * ======================================================================\r\n * Title: purchases-by-service-graph.component.ts\r\n * Author: Nicole Forke, Janet Blohn and Joann Saeou\r\n * Date: 11/06/2020\r\n * Modified by: Joann Saeou\r\n * Description: Group 1 - BCRS - a graph showing the total # of purchases\r\n * ======================================================================\r\n */\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { InvoiceService } from '../../shared/invoice.service';    //Added 11/06/20 Janet\r\n\r\n@Component({\r\n  selector: 'app-purchases-by-service-graph',\r\n  templateUrl: './purchases-by-service-graph.component.html',\r\n  styleUrls: ['./purchases-by-service-graph.component.css']\r\n})\r\nexport class PurchasesByServiceGraphComponent implements OnInit {\r\n  purchases: any;\r\n  data: any;\r\n  itemCount = []; //Change from itemCount: to itemCount = 11/06/20 Janet\r\n  labels = [];\r\n\r\n  constructor(private invoiceService: InvoiceService) {\r\n    // call the purchases-graph API\r\n\r\n    this.invoiceService.findPurchasesByServiceGraph().subscribe(res => {\r\n      // map the response data to the purchases variable\r\n      this.purchases = res['data'];\r\n\r\n      // loop over the purchases to split out the services and the item count\r\n      for (const item of this.purchases) {\r\n        this.labels.push(item._id.title);\r\n        this.itemCount.push(item.count);\r\n      }\r\n\r\n      // build the object literal for the primeNG bar graph\r\n      this.data = {\r\n        labels: this.labels, // label for services\r\n        datasets: [\r\n          // graph object\r\n          {\r\n            backgroundColor: [\r\n              '#ED0A3F',\r\n              '#FF8833',\r\n              '#5FA777',\r\n              '#0066CC',\r\n              '#6B3FA0',\r\n              '#AF593E',\r\n              '#6CDAE7',\r\n              '#6DDE44'\r\n            ],\r\n            hoverBackgroundColor: [\r\n              '#ED0A3F',\r\n              '#FF8833',\r\n              '#5FA777',\r\n              '#0066CC',\r\n              '#6B3FA0',\r\n              '#AF593E',\r\n              '#6CDAE7',\r\n              '#6DDE44'\r\n            ],\r\n            data: this.itemCount\r\n          },\r\n        ]\r\n      };\r\n\r\n      // verify the data objects structure matches PrimeNG's expected format\r\n      console.log('Data object');\r\n      console.log('this.data');\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n}\r\n","<h1 style='font-weight: lighter; text-align: center;'> Purchases by Service page</h1>\r\n<p-chart type='pie' [data]='data'></p-chart>\r\n","/**\r\n * Title: role-create.component.ts\r\n * Modifiers: Nicole Forke, Janet Blohn, and Joann Saeou\r\n * Date: 11/05/2020\r\n * Added By: Janet Blohn\r\n * Description: TypeScript for the RoleCreate Component for Bob's Computer Repair Service\r\n */\r\n/* Import required modules from Angular */\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n\r\n// Import required application modules and components\r\nimport { RoleService } from '../../shared/role.service';\r\nimport { Role } from '../../shared/role.interface';\r\n\r\n@Component({\r\n  selector: 'app-role-create',\r\n  templateUrl: './role-create.component.html',\r\n  styleUrls: ['./role-create.component.css']\r\n})\r\nexport class RoleCreateComponent implements OnInit {\r\n  form: FormGroup;\r\n\r\n  constructor(private fb: FormBuilder, private router: Router, private roleService: RoleService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.form = this.fb.group({\r\n      text: [null, Validators.compose([Validators.required])]\r\n    });\r\n  }\r\n\r\n  // Create a new role\r\n  create() {\r\n    const newRole = {\r\n      text: this.form.controls['text'].value\r\n    } as Role\r\n\r\n    this.roleService.createRole(newRole).subscribe(res => {\r\n      this.router.navigate(['/admin/roles']);\r\n    }, err => {\r\n      console.log(err);\r\n    })\r\n  }\r\n\r\n  // Cancel out and navigate back to the main page for roles\r\n  cancel() {\r\n    this.router.navigate(['/admin/site-maintenance']);\r\n  }\r\n}\r\n","<!--\r\n * Title: role-create.component.html\r\n * Modifiers: Nicole Forke, Janet Blohn, and Joann Saeou\r\n * Date: 11/05/2020\r\n * Added By: Janet Blohn\r\n * Description: HTML for the RoleCreate Component for Bob's Computer Repair Service\r\n -->\r\n<div fxLayout=\"column\">\r\n  <mat-card class=\"mat-elevation-z8\">\r\n    <mat-card-title>Create Role</mat-card-title>\r\n    <br/>\r\n    <form [formGroup]=\"form\" (ngSubmit)=\"create()\" #roleForm>\r\n      <mat-card-content>\r\n        <div fxLayout=\"column\" fxLayoutGap=\"10px\">\r\n          <mat-form-field>\r\n            <input matInput\r\n                    [formControl]=\"form.controls['text']\"\r\n                    placeholder=\"Role\"/>\r\n          </mat-form-field>\r\n        </div>\r\n      </mat-card-content>\r\n\r\n      <br/>\r\n      <mat-card-actions align:end>\r\n        <button mat-raised-button (click)=\"cancel()\" color=\"warn\">Cancel</button>\r\n        <button mat-raised-button color=\"accent\">Submit</button>\r\n      </mat-card-actions>\r\n    </form>\r\n  </mat-card>\r\n</div>\r\n","/**\r\n * Title: user-list.component.ts\r\n * Modifiers: Nicole Forke, Janet Blohn, and Joann Saeou\r\n * Date: 10/28/2020\r\n * Added By: Janet Blohn\r\n * Description: TypeScript for the UserList Component for Bob's Computer Repair Service\r\n */\r\n\r\n /* Import required modules from Angular and 3rd parties*/\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n// Import required application modules and components\r\nimport { DeleteRecordDialogComponent } from './../../shared/delete-record-dialog/delete-record-dialog.component';\r\nimport { UserService } from './../../shared/user.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-user-list',\r\n  templateUrl: './user-list.component.html',\r\n  styleUrls: ['./user-list.component.css']\r\n})\r\nexport class UserListComponent implements OnInit {\r\n  users: any;\r\n  displayedColumns = ['userName', 'firstName', 'lastName', 'phoneNumber', 'address', 'email', 'role', 'functions'];\r\n\r\n  constructor(private http: HttpClient, private dialog: MatDialog, private userService: UserService) {\r\n    this.userService.findAllUsers().subscribe(res => {\r\n      this.users = res['data'];\r\n      console.log(this.users);\r\n    }, err => {\r\n      console.log(err);\r\n    });\r\n   }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  delete(recordId: string, nameText: string): void {\r\n    const dialogRef = this.dialog.open(DeleteRecordDialogComponent, {\r\n      data: {\r\n        recordId,\r\n        dialogHeader: \"Are you sure you want to delete user:\",\r\n        dialogBody: `${nameText}`\r\n      },\r\n      disableClose: true,\r\n      width: '400px'\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result === 'confirm') {\r\n        //this.userService.deleteUser(userName).subscribe(res => {\r\n          this.userService.deleteUser(recordId).subscribe(res => {\r\n          console.log('User deleted');\r\n          this.users = this.users.filter(u => u._id !== recordId);\r\n\r\n        });\r\n      }\r\n    });\r\n  }\r\n}\r\n","<!--\r\n=============================================================\r\n Title:  user-list.component.html\r\n * Modifiers: Nicole Forke, Janet Blohn, Joann Saeou\r\n * Date: 10/28/2020\r\n * Description: Bobs Computer Repair Services\r\n * HTML for the UserList Component\r\n ============================================\r\n * Added 10/28/20 Janet Blohn\r\n=============================================================\r\n-->\r\n\r\n<div fxLayout=\"column\" class=\"center-card\">\r\n    <mat-card>\r\n        <mat-card-title>User Configuration</mat-card-title>\r\n        <mat-card-subtitle>\r\n            <button mat-button routerLink=\"/admin/site-maintenance\" color=\"accent\">Cancel</button>\r\n        </mat-card-subtitle>\r\n\r\n        <mat-card-content *ngIf=\"users\">\r\n            <table mat-table [dataSource]=\"users\">\r\n                <ng-container matColumnDef=\"userName\">\r\n                    <th mat-header-cell *matHeaderCellDef>Username</th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n                        {{ element.userName }}\r\n                    </td>\r\n                </ng-container>\r\n\r\n                <ng-container class=\"cell-space\" matColumnDef=\"firstName\">\r\n                    <th mat-header-cell *matHeaderCellDef>First Name</th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n                        {{ element.firstName }}\r\n                    </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"lastName\">\r\n                    <th mat-header-cell *matHeaderCellDef>Last Name</th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n                        {{ element.lastName }}\r\n                    </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"phoneNumber\">\r\n                    <th mat-header-cell *matHeaderCellDef>Phone Number</th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n                        {{ element.phoneNumber }}\r\n                    </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"address\">\r\n                    <th mat-header-cell *matHeaderCellDef>Address</th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n                        {{ element.address }}\r\n                    </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"email\">\r\n                    <th mat-header-cell *matHeaderCellDef>Email</th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n                        {{ element.email }}\r\n                    </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"role\">\r\n                  <th mat-header-cell *matHeaderCellDef>Role</th>\r\n                  <td mat-cell *matCellDef=\"let element\">\r\n                      {{ element.role.role }}\r\n                  </td>\r\n              </ng-container>\r\n\r\n                <ng-container matColumnDef=\"functions\">\r\n                    <th mat-header-cell *matHeaderCellDef>Functions</th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n                        <button mat-icon-button routerLink=\"/admin/users/{{element._id}}\">\r\n            <mat-icon color=\"accent\">edit</mat-icon>\r\n          </button>\r\n                        <button mat-icon-button (click)=\"delete(element._id, element.userName)\">\r\n            <mat-icon color=\"accent\">delete</mat-icon>\r\n          </button>\r\n                    </td>\r\n                </ng-container>\r\n\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n            </table>\r\n        </mat-card-content>\r\n    </mat-card>\r\n</div>\r\n","/**\r\n * ======================================================================\r\n * Title: Bob's Computer Repair Shop Capstone\r\n * Author: Nicole Forke, Janet Blohn, Verlee Washington, and Joann Saeou\r\n * Date: 11/01/2020\r\n * Modified by: Nicole Forke\r\n * Description: Signin Component\r\n * ======================================================================\r\n */\r\n/**\r\n * Import statements\r\n */\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-server-error',\r\n  templateUrl: './server-error.component.html',\r\n  styleUrls: ['./server-error.component.css']\r\n})\r\n\r\n/**\r\n * Export component\r\n */\r\nexport class ServerErrorComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div fxLayout=\"column\" fxLayoutAlign=\"center center\">\r\n\r\n    <mat-card fxFlex class=\"mat-elevation-z8\">\r\n    \r\n    <mat-card-title>\r\n        <img src=\"../../../assets/500-internal-server-error-image.png\" />\r\n    </mat-card-title>\r\n\r\n    <br />\r\n    \r\n    <mat-card-content fxLayout=\"column\">\r\n        <button mat-raised-button color=\"accent\" routerLink=\"/\">Return home</button>\r\n    </mat-card-content>\r\n\r\n    </mat-card>\r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","/**\r\n * =====================================================================\r\n * Title: Bobs Computer Repair Shop Capstone\r\n * Author: Nicole Forke, Janet Blohn, Joann Saeou, and Verlee Washington\r\n * Date: 10/24/2020\r\n * Description: User service\r\n * ======================================================================\r\n */\r\n\r\n/**\r\n * Import statements\r\n */\r\nimport { Injectable } from '@angular/core';\r\nimport { User } from './user.interface';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\n/**\r\n * Export Service\r\n */\r\nexport class UserService {\r\n  constructor(private http: HttpClient) { }\r\n\r\n  findAllUsers(): Observable<any> {\r\n    return this.http.get('/api/users');\r\n  }\r\n\r\n  findUserById(userId: string): Observable<any> {\r\n    return this.http.get('/api/users/' + userId);\r\n  }\r\n\r\n  findUserByUserName(userName: string): Observable<any> {\r\n    return this.http.get('/api/users/' + userName);\r\n  }\r\n\r\n  createUser(user: User): Observable<any> {\r\n    return this.http.post('/api/users/', {\r\n      userName: user.userName,\r\n      password: user.password,\r\n      firstName: user.firstName,\r\n      lastName: user.lastName,\r\n      phoneNumber: user.phoneNumber,\r\n      address: user.address,\r\n      email: user.email,\r\n      role: user.role //Added 11/6/20 Janet\r\n    });\r\n  }\r\n\r\n  updateUser(userId: string, user: User): Observable<any> {\r\n    return this.http.put('/api/users/' + userId, {\r\n      firstName: user.firstName,\r\n      lastName: user.lastName,\r\n      phoneNumber: user.phoneNumber,\r\n      address: user.address,\r\n      email: user.email,\r\n      role: user.role  // Added 11/10/20 Janet\r\n    });\r\n  }\r\n\r\n  deleteUser(userId: string): Observable<any> {\r\n    return this.http.delete('/api/users/' + userId);\r\n  }\r\n}\r\n","/*\r\n============================================\r\n; Title:  auth.guard.js\r\n * Modifiers: Nicole Forke, Janet Blohn, Verlee Washington, Joann Saeou\r\n * Date: 10/24/2020\r\n * Description: Bobs Computer Repair Services\r\n * TypeScript Auth Guard for Sign in\r\n ============================================\r\n * Added to project 10/24/20 by Janet Blohn\r\n */\r\n​\r\nimport { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { Router } from '@angular/router';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { Observable } from 'rxjs';\r\nimport { RoleService } from './role.service';\r\nimport { map } from 'rxjs/operators';\r\n​\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private router: Router, private cookieService: CookieService, private roleService: RoleService) {\r\n​\r\n  }\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n    const sessionUser = this.cookieService.get('session_user');\r\n\r\n    return this.roleService.findUserRole(this.cookieService.get('sessionUser')).pipe(map(res =>\r\n        {\r\n          if (res['data'].role === 'superAdmin' || 'admin')\r\n          {\r\n            return true;\r\n          }\r\n          else\r\n          {\r\n            this.router.navigate(['/']);\r\n            return false;\r\n          }\r\n        }));\r\n      }\r\n    }\r\n","/**\r\n * Title: user-create.component.ts\r\n * Author:  Nicole Forke, Janet Blohn, and Joann Saeou\r\n * Date: 10/24/2020\r\n * modified: Joann Saeou\r\n * Description: this is the user-create configuration page as known as CRUD operation\r\n */\r\n\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {Router} from '@angular/router';\r\nimport { User } from '../../shared/user.interface';\r\nimport { UserService } from '../../shared/user.service';\r\nimport { Role } from '../../shared/role.interface';\r\nimport { RoleService } from '../../shared/role.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-user-create',\r\n  templateUrl: './user-create.component.html',\r\n  styleUrls: ['./user-create.component.css']\r\n})\r\nexport class UserCreateComponent implements OnInit {\r\n\r\n  user: User;\r\n  userId: string;\r\n  form: FormGroup;\r\n  roles: any;\r\n\r\n\r\n  constructor(private fb: FormBuilder, private router: Router, private userService: UserService, private roleService: RoleService) { }\r\n\r\n\r\n  /**\r\n   * Author: Joann Saeou\r\n   * Date: 10/24/2020\r\n   *\r\n   * a function that processes a FormControl or collection of controls and returns an error map or null.\r\n   * A null map means that validation has passed.\r\n   *\r\n   */\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group({\r\n      userName: [null, Validators.compose([Validators.required])],\r\n      password: [null, Validators.compose([Validators.required])],\r\n      firstName: [null, Validators.compose([Validators.required])],\r\n      lastName: [null, Validators.compose([Validators.required])],\r\n      phoneNumber: [null, Validators.compose([Validators.required])],\r\n      address: [null, Validators.compose([Validators.required])],\r\n      email: [null, Validators.compose([Validators.required, Validators.email])],\r\n      role: [null, Validators.compose([Validators.required])]\r\n\r\n\r\n    });\r\n  }\r\n\r\n/**\r\n * Create new user instance for data values\r\n */\r\n\r\n  createUser() {\r\n    const newUser = {} as User;\r\n    newUser.userName = this.form.controls.userName.value,\r\n    newUser.password = this.form.controls.password.value,\r\n    newUser.firstName = this.form.controls.firstName.value,\r\n    newUser.lastName = this.form.controls.lastName.value,\r\n    newUser.phoneNumber = this.form.controls.phoneNumber.value,\r\n    newUser.address = this.form.controls.address.value,\r\n    newUser.email = this.form.controls.email.value,\r\n\r\n    this.userService.createUser(newUser).subscribe(res =>   {\r\n      this.router.navigate(['/admin/site-maintenance']);\r\n    }, err => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n/**\r\n * cancel the navigation link\r\n */\r\n cancel() {\r\n   this.router.navigate(['/admin/site-maintenance']);\r\n  }\r\n\r\n}\r\n","<!-- /**\r\n* Title: user-create.component.html\r\n* Author:  Nicole Forke, Janet Blohn, and Joann Saeou\r\n* Date: 10/24/2020\r\n* Date Modified: 10/31/2020\r\n* modified By: Joann Saeou\r\n* Description: this is the HTML user-create configuration page\r\n*/ -->\r\n\r\n\r\n\r\n<div fxLayout=\"column\">\r\n    <mat-card class=\"mat-elevation-z6 signin-container\">\r\n\r\n        <mat-card-title class=\"title\"> <b>Create User </b> </mat-card-title>\r\n\r\n\r\n        <form [formGroup]=\"form\" (ngSubmit)=\"createUser()\" #userForm>\r\n\r\n            <mat-card-content>\r\n\r\n                <div fxLayout=\"column\" fxLayoutGap=\"10px\">\r\n\r\n                    <mat-form-field>\r\n                        <input type=\"text\" matInput [formControl]=\"form.controls['userName']\" placeholder=\"Username\" />\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field>\r\n                        <input type=\"text\" matInput [formControl]=\"form.controls['password']\" placeholder=\"Password\" />\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field>\r\n                        <input type=\"text\" matInput [formControl]=\"form.controls['firstName']\" placeholder=\"First name\" />\r\n                    </mat-form-field>\r\n\r\n\r\n                    <mat-form-field>\r\n                        <input type=\"text\" matInput [formControl]=\"form.controls['lastName']\" placeholder=\"Last name\" />\r\n                    </mat-form-field>\r\n\r\n\r\n                    <mat-form-field>\r\n                        <input type=\"text\" matInput [formControl]=\"form.controls['phoneNumber']\" placeholder=\"Phone number\" />\r\n                    </mat-form-field>\r\n\r\n                    <mat-form-field>\r\n                        <input type=\"text\" matInput [formControl]=\"form.controls['address']\" placeholder=\"address\" />\r\n                    </mat-form-field>\r\n\r\n\r\n                    <mat-form-field>\r\n                        <input type=\"text\" matInput [formControl]=\"form.controls['email']\" placeholder=\"Email\" />\r\n                    </mat-form-field>\r\n\r\n                </div>\r\n            </mat-card-content>\r\n\r\n            <mat-card-actions align:end>\r\n                <button mat-raised-button (click)=\"cancel()\" color=\"warn\">Cancel</button> &nbsp; &nbsp; &nbsp;\r\n                <button type=\"submit\" mat-raised-button color=\"primary\">Submit</button>\r\n\r\n            </mat-card-actions>\r\n\r\n\r\n        </form>\r\n\r\n    </mat-card>\r\n\r\n\r\n</div>\r\n","/**\r\n * ======================================================================\r\n * Title: Bob's Computer Repair Shop Capstone\r\n * Author: Nicole Forke, Janet Blohn, and Joann Saeou\r\n * Date: 11/07/2020\r\n * Modified by: Nicole Forke\r\n * Description: Invoice Summary Dialog Component\r\n * ======================================================================\r\n */\r\n\r\n /**\r\n  * Import statements\r\n  */\r\n import { Component, OnInit, Inject } from '@angular/core';\r\n import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\n import { Invoice } from '../../shared/invoice.interface';\r\n\r\n @Component({\r\n   selector: 'app-invoice-summary-dialog',\r\n   templateUrl: './invoice-summary-dialog.component.html',\r\n   styleUrls: ['./invoice-summary-dialog.component.css']\r\n })\r\n\r\n /**\r\n  * Export component\r\n  */\r\n export class InvoiceSummaryDialogComponent implements OnInit {\r\n\r\n   invoice: Invoice;\r\n\r\n   constructor(private dialogRef: MatDialogRef<InvoiceSummaryDialogComponent>, @Inject(MAT_DIALOG_DATA) data) {\r\n\r\n     this.invoice = data.invoice;\r\n    }\r\n\r\n   ngOnInit(): void {\r\n   }\r\n\r\n }\r\n","<div class=\"main\">\r\n  <h1 style=\"text-align: center;\" mat-dialog-title>{{ invoice.userName }} Invoice Summary</h1>\r\n</div>\r\n    \r\n    <div mat-dialog-content>\r\n        <h3>Order date: {{ invoice.orderDate | date }}</h3>\r\n    \r\n        <mat-divider></mat-divider>\r\n    \r\n        <h4>Services</h4>\r\n        <div *ngFor=\"let lineItem of invoice.lineItems\">\r\n            <mat-list>\r\n                <mat-list-item>\r\n                    {{ lineItem.title }}: \r\n                    <div fxFlex></div>\r\n                    {{ lineItem.price | currency }}\r\n                </mat-list-item>\r\n            </mat-list>\r\n        </div>\r\n    \r\n        <mat-divider></mat-divider>\r\n    \r\n        <h4>Standard Fees</h4>\r\n        <mat-list>\r\n            <mat-list-item>\r\n                Parts:\r\n                <div fxFlex></div>\r\n                {{ invoice.partsAmount | currency }}\r\n            </mat-list-item>\r\n            <mat-list-item>\r\n                Labor:\r\n                <div fxFlex></div>\r\n                {{ invoice.laborAmount | currency }}\r\n            </mat-list-item>\r\n        </mat-list>\r\n    \r\n        <br />\r\n    \r\n        <mat-divider></mat-divider>\r\n    \r\n        <p fxLayoutAlign=\"end\">\r\n            Total charges: {{ invoice.total | currency }}\r\n        </p>\r\n    </div>\r\n    \r\n    <br />\r\n    \r\n    <div mat-dialog-actions align=\"end\">\r\n        <button mat-raised-button matDialogClose=\"cancel\" style=\"background-color: #FFFF00;\" color=\"#000000\">Cancel</button>\r\n        <button mat-raised-button matDialogClose=\"confirm\" style=\"background-color: #04B504;\" color=\"#000000\" cdkFocusInitial>Confirm Order</button>\r\n    </div>","/*\r\n============================================\r\n; Title:  user-details.components.ts\r\n * Modifiers: Nicole Forke, Janet Blohn, Verlee Washington, Joann Saeou\r\n * Date: 10/25/2020\r\n * Description: Bobs Computer Repair Services\r\n * TypeScript for the UserDetails Component\r\n ============================================\r\n * Added to project 10/27/20 by Janet Blohn\r\n */\r\n\r\n/* Import required modules from Angular */\r\n import { Component, OnInit } from '@angular/core';\r\n import { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n import { ActivatedRoute, Router } from '@angular/router';\r\n\r\n // Import required application modules and components\r\n import { UserService } from './../../shared/user.service';\r\n import { User } from './../../shared/user.interface';\r\n import { Role } from './../../shared/role.interface'; //Added 11/06/20 Janet\r\n import { RoleService } from './../../shared/role.service'; //Added 11/06/20 Janet\r\n\r\n @Component({\r\n  selector: 'app-user-details',\r\n  templateUrl: './user-details.component.html',\r\n  styleUrls: ['./user-details.component.css']\r\n})\r\nexport class UserDetailsComponent implements OnInit {\r\n  user: User;\r\n  userId: string;\r\n  userName: string;\r\n  form: FormGroup;\r\n  roles: Role[]; //Added 11/06/20 Janet\r\n\r\n  constructor(private route: ActivatedRoute, private fb: FormBuilder, private router: Router, private userService: UserService, private roleService: RoleService) {\r\n    this.userName = this.route.snapshot.paramMap.get('userName');\r\n\r\n    this.userService.findUserByUserName(this.userName).subscribe(res => {\r\n      this.user = res['data'];\r\n      console.log(this.user);\r\n    }, err => {\r\n      console.log(err);\r\n    }, () => {\r\n      this.form.controls.firstName.setValue(this.user.firstName);\r\n      this.form.controls.lastName.setValue(this.user.lastName);\r\n      this.form.controls.phoneNumber.setValue(this.user.phoneNumber);\r\n      this.form.controls.address.setValue(this.user.address);\r\n      this.form.controls.email.setValue(this.user.email);\r\n      this.form.controls.role.setValue(this.user.role['role']); //Added 11/06/20 Janet\r\n\r\n      this.roleService.findAllRoles().subscribe(res => {\r\n        this.roles = res['data'];\r\n      }, err => {\r\n        console.log(err);\r\n      })\r\n    })\r\n   }\r\n\r\n  ngOnInit() {\r\n    this.form = this.fb.group({\r\n      firstName: [null, Validators.compose([Validators.required])],\r\n      lastName: [null, Validators.compose([Validators.required])],\r\n      phoneNumber: [null, Validators.compose([Validators.required])],\r\n      address: [null, Validators.compose([Validators.required])],\r\n      email: [null, Validators.compose([Validators.required, Validators.email])],\r\n      role: [null, Validators.compose([Validators.required])]\r\n    });\r\n  }\r\n\r\n  saveUser() {\r\n    const updatedUser = {} as User;\r\n    updatedUser.firstName = this.form.controls.firstName.value;\r\n    updatedUser.lastName = this.form.controls.lastName.value;\r\n    updatedUser.phoneNumber = this.form.controls.phoneNumber.value;\r\n    updatedUser.address = this.form.controls.address.value;\r\n    updatedUser.email = this.form.controls.email.value;\r\n    updatedUser.role = this.form.controls.role.value;\r\n\r\n    console.log('savedUser object')\r\n    console.log(updatedUser);\r\n\r\n    this.userService.updateUser(this.userName, updatedUser).subscribe(res => {\r\n      this.router.navigate(['admin/users']);\r\n    });\r\n  }\r\n\r\n  cancel() {\r\n    this.router.navigate(['admin/site-maintenance']);\r\n  }\r\n}\r\n","<!--\r\n=============================================================\r\n Title:  user-details.component.html\r\n * Modifiers: Nicole Forke, Janet Blohn, Joann Saeou\r\n * Date: 10/26/2020\r\n * Description: Bobs Computer Repair Services\r\n * HTML for the UserDetails Component\r\n ============================================\r\n * Added to project 10/27/20 by Janet Blohn\r\n=============================================================\r\n-->\r\n\r\n<div fxLayout=\"column\">\r\n  <mat-card class=\"mat-elevation-z8 details-card\">\r\n    <mat-card-title>User Details</mat-card-title>\r\n    <br/>\r\n    <form [formGroup]=\"form\" (ngSubmit)=\"saveUser()\" #userform>\r\n      <mat-card-content>\r\n        <div fxLayout=\"column\" fxLayoutGap=\"10px\">\r\n          <mat-form-field>\r\n            <input type=\"text\" matInput [formControl]=\"form.controls['firstName']\"\r\n                placeholder=\"First Name\"/>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <input type=\"text\" matInput [formControl]=\"form.controls['lastName']\"\r\n                placeholder=\"Last Name\"/>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <mat-select [formControl]=\"form.controls['role']\"\r\n                        placeholder=\"Role\">\r\n                <mat-option *ngFor=\"let role of roles\"\r\n                            [value]=\"role.text\">\r\n\r\n                            {{role.text}}\r\n                </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <input type=\"text\" matInput [formControl]=\"form.controls['phoneNumber']\"\r\n                placeholder=\"Phone Number\"/>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <input type=\"text\" matInput [formControl]=\"form.controls['address']\"\r\n                placeholder=\"Address\"/>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field>\r\n            <input type=\"text\" matInput [formControl]=\"form.controls['email']\"\r\n                placeholder=\"Email\"/>\r\n          </mat-form-field>\r\n        </div>\r\n      </mat-card-content>\r\n\r\n      <br/>\r\n      <mat-card-actions align:end>\r\n        <button mat-raised-button (click)=\"cancel()\" color=\"warn\">Cancel</button>\r\n        <button mat-raised-button color=\"accent\">Submit</button>\r\n      </mat-card-actions>\r\n    </form>\r\n  </mat-card>\r\n</div>\r\n","var map = {\n\t\"./af\": \"K/tc\",\n\t\"./af.js\": \"K/tc\",\n\t\"./ar\": \"jnO4\",\n\t\"./ar-dz\": \"o1bE\",\n\t\"./ar-dz.js\": \"o1bE\",\n\t\"./ar-kw\": \"Qj4J\",\n\t\"./ar-kw.js\": \"Qj4J\",\n\t\"./ar-ly\": \"HP3h\",\n\t\"./ar-ly.js\": \"HP3h\",\n\t\"./ar-ma\": \"CoRJ\",\n\t\"./ar-ma.js\": \"CoRJ\",\n\t\"./ar-sa\": \"gjCT\",\n\t\"./ar-sa.js\": \"gjCT\",\n\t\"./ar-tn\": \"bYM6\",\n\t\"./ar-tn.js\": \"bYM6\",\n\t\"./ar.js\": \"jnO4\",\n\t\"./az\": \"SFxW\",\n\t\"./az.js\": \"SFxW\",\n\t\"./be\": \"H8ED\",\n\t\"./be.js\": \"H8ED\",\n\t\"./bg\": \"hKrs\",\n\t\"./bg.js\": \"hKrs\",\n\t\"./bm\": \"p/rL\",\n\t\"./bm.js\": \"p/rL\",\n\t\"./bn\": \"kEOa\",\n\t\"./bn-bd\": \"loYQ\",\n\t\"./bn-bd.js\": \"loYQ\",\n\t\"./bn.js\": \"kEOa\",\n\t\"./bo\": \"0mo+\",\n\t\"./bo.js\": \"0mo+\",\n\t\"./br\": \"aIdf\",\n\t\"./br.js\": \"aIdf\",\n\t\"./bs\": \"JVSJ\",\n\t\"./bs.js\": \"JVSJ\",\n\t\"./ca\": \"1xZ4\",\n\t\"./ca.js\": \"1xZ4\",\n\t\"./cs\": \"PA2r\",\n\t\"./cs.js\": \"PA2r\",\n\t\"./cv\": \"A+xa\",\n\t\"./cv.js\": \"A+xa\",\n\t\"./cy\": \"l5ep\",\n\t\"./cy.js\": \"l5ep\",\n\t\"./da\": \"DxQv\",\n\t\"./da.js\": \"DxQv\",\n\t\"./de\": \"tGlX\",\n\t\"./de-at\": \"s+uk\",\n\t\"./de-at.js\": \"s+uk\",\n\t\"./de-ch\": \"u3GI\",\n\t\"./de-ch.js\": \"u3GI\",\n\t\"./de.js\": \"tGlX\",\n\t\"./dv\": \"WYrj\",\n\t\"./dv.js\": \"WYrj\",\n\t\"./el\": \"jUeY\",\n\t\"./el.js\": \"jUeY\",\n\t\"./en-au\": \"Dmvi\",\n\t\"./en-au.js\": \"Dmvi\",\n\t\"./en-ca\": \"OIYi\",\n\t\"./en-ca.js\": \"OIYi\",\n\t\"./en-gb\": \"Oaa7\",\n\t\"./en-gb.js\": \"Oaa7\",\n\t\"./en-ie\": \"4dOw\",\n\t\"./en-ie.js\": \"4dOw\",\n\t\"./en-il\": \"czMo\",\n\t\"./en-il.js\": \"czMo\",\n\t\"./en-in\": \"7C5Q\",\n\t\"./en-in.js\": \"7C5Q\",\n\t\"./en-nz\": \"b1Dy\",\n\t\"./en-nz.js\": \"b1Dy\",\n\t\"./en-sg\": \"t+mt\",\n\t\"./en-sg.js\": \"t+mt\",\n\t\"./eo\": \"Zduo\",\n\t\"./eo.js\": \"Zduo\",\n\t\"./es\": \"iYuL\",\n\t\"./es-do\": \"CjzT\",\n\t\"./es-do.js\": \"CjzT\",\n\t\"./es-mx\": \"tbfe\",\n\t\"./es-mx.js\": \"tbfe\",\n\t\"./es-us\": \"Vclq\",\n\t\"./es-us.js\": \"Vclq\",\n\t\"./es.js\": \"iYuL\",\n\t\"./et\": \"7BjC\",\n\t\"./et.js\": \"7BjC\",\n\t\"./eu\": \"D/JM\",\n\t\"./eu.js\": \"D/JM\",\n\t\"./fa\": \"jfSC\",\n\t\"./fa.js\": \"jfSC\",\n\t\"./fi\": \"gekB\",\n\t\"./fi.js\": \"gekB\",\n\t\"./fil\": \"1ppg\",\n\t\"./fil.js\": \"1ppg\",\n\t\"./fo\": \"ByF4\",\n\t\"./fo.js\": \"ByF4\",\n\t\"./fr\": \"nyYc\",\n\t\"./fr-ca\": \"2fjn\",\n\t\"./fr-ca.js\": \"2fjn\",\n\t\"./fr-ch\": \"Dkky\",\n\t\"./fr-ch.js\": \"Dkky\",\n\t\"./fr.js\": \"nyYc\",\n\t\"./fy\": \"cRix\",\n\t\"./fy.js\": \"cRix\",\n\t\"./ga\": \"USCx\",\n\t\"./ga.js\": \"USCx\",\n\t\"./gd\": \"9rRi\",\n\t\"./gd.js\": \"9rRi\",\n\t\"./gl\": \"iEDd\",\n\t\"./gl.js\": \"iEDd\",\n\t\"./gom-deva\": \"qvJo\",\n\t\"./gom-deva.js\": \"qvJo\",\n\t\"./gom-latn\": \"DKr+\",\n\t\"./gom-latn.js\": \"DKr+\",\n\t\"./gu\": \"4MV3\",\n\t\"./gu.js\": \"4MV3\",\n\t\"./he\": \"x6pH\",\n\t\"./he.js\": \"x6pH\",\n\t\"./hi\": \"3E1r\",\n\t\"./hi.js\": \"3E1r\",\n\t\"./hr\": \"S6ln\",\n\t\"./hr.js\": \"S6ln\",\n\t\"./hu\": \"WxRl\",\n\t\"./hu.js\": \"WxRl\",\n\t\"./hy-am\": \"1rYy\",\n\t\"./hy-am.js\": \"1rYy\",\n\t\"./id\": \"UDhR\",\n\t\"./id.js\": \"UDhR\",\n\t\"./is\": \"BVg3\",\n\t\"./is.js\": \"BVg3\",\n\t\"./it\": \"bpih\",\n\t\"./it-ch\": \"bxKX\",\n\t\"./it-ch.js\": \"bxKX\",\n\t\"./it.js\": \"bpih\",\n\t\"./ja\": \"B55N\",\n\t\"./ja.js\": \"B55N\",\n\t\"./jv\": \"tUCv\",\n\t\"./jv.js\": \"tUCv\",\n\t\"./ka\": \"IBtZ\",\n\t\"./ka.js\": \"IBtZ\",\n\t\"./kk\": \"bXm7\",\n\t\"./kk.js\": \"bXm7\",\n\t\"./km\": \"6B0Y\",\n\t\"./km.js\": \"6B0Y\",\n\t\"./kn\": \"PpIw\",\n\t\"./kn.js\": \"PpIw\",\n\t\"./ko\": \"Ivi+\",\n\t\"./ko.js\": \"Ivi+\",\n\t\"./ku\": \"JCF/\",\n\t\"./ku.js\": \"JCF/\",\n\t\"./ky\": \"lgnt\",\n\t\"./ky.js\": \"lgnt\",\n\t\"./lb\": \"RAwQ\",\n\t\"./lb.js\": \"RAwQ\",\n\t\"./lo\": \"sp3z\",\n\t\"./lo.js\": \"sp3z\",\n\t\"./lt\": \"JvlW\",\n\t\"./lt.js\": \"JvlW\",\n\t\"./lv\": \"uXwI\",\n\t\"./lv.js\": \"uXwI\",\n\t\"./me\": \"KTz0\",\n\t\"./me.js\": \"KTz0\",\n\t\"./mi\": \"aIsn\",\n\t\"./mi.js\": \"aIsn\",\n\t\"./mk\": \"aQkU\",\n\t\"./mk.js\": \"aQkU\",\n\t\"./ml\": \"AvvY\",\n\t\"./ml.js\": \"AvvY\",\n\t\"./mn\": \"lYtQ\",\n\t\"./mn.js\": \"lYtQ\",\n\t\"./mr\": \"Ob0Z\",\n\t\"./mr.js\": \"Ob0Z\",\n\t\"./ms\": \"6+QB\",\n\t\"./ms-my\": \"ZAMP\",\n\t\"./ms-my.js\": \"ZAMP\",\n\t\"./ms.js\": \"6+QB\",\n\t\"./mt\": \"G0Uy\",\n\t\"./mt.js\": \"G0Uy\",\n\t\"./my\": \"honF\",\n\t\"./my.js\": \"honF\",\n\t\"./nb\": \"bOMt\",\n\t\"./nb.js\": \"bOMt\",\n\t\"./ne\": \"OjkT\",\n\t\"./ne.js\": \"OjkT\",\n\t\"./nl\": \"+s0g\",\n\t\"./nl-be\": \"2ykv\",\n\t\"./nl-be.js\": \"2ykv\",\n\t\"./nl.js\": \"+s0g\",\n\t\"./nn\": \"uEye\",\n\t\"./nn.js\": \"uEye\",\n\t\"./oc-lnc\": \"Fnuy\",\n\t\"./oc-lnc.js\": \"Fnuy\",\n\t\"./pa-in\": \"8/+R\",\n\t\"./pa-in.js\": \"8/+R\",\n\t\"./pl\": \"jVdC\",\n\t\"./pl.js\": \"jVdC\",\n\t\"./pt\": \"8mBD\",\n\t\"./pt-br\": \"0tRk\",\n\t\"./pt-br.js\": \"0tRk\",\n\t\"./pt.js\": \"8mBD\",\n\t\"./ro\": \"lyxo\",\n\t\"./ro.js\": \"lyxo\",\n\t\"./ru\": \"lXzo\",\n\t\"./ru.js\": \"lXzo\",\n\t\"./sd\": \"Z4QM\",\n\t\"./sd.js\": \"Z4QM\",\n\t\"./se\": \"//9w\",\n\t\"./se.js\": \"//9w\",\n\t\"./si\": \"7aV9\",\n\t\"./si.js\": \"7aV9\",\n\t\"./sk\": \"e+ae\",\n\t\"./sk.js\": \"e+ae\",\n\t\"./sl\": \"gVVK\",\n\t\"./sl.js\": \"gVVK\",\n\t\"./sq\": \"yPMs\",\n\t\"./sq.js\": \"yPMs\",\n\t\"./sr\": \"zx6S\",\n\t\"./sr-cyrl\": \"E+lV\",\n\t\"./sr-cyrl.js\": \"E+lV\",\n\t\"./sr.js\": \"zx6S\",\n\t\"./ss\": \"Ur1D\",\n\t\"./ss.js\": \"Ur1D\",\n\t\"./sv\": \"X709\",\n\t\"./sv.js\": \"X709\",\n\t\"./sw\": \"dNwA\",\n\t\"./sw.js\": \"dNwA\",\n\t\"./ta\": \"PeUW\",\n\t\"./ta.js\": \"PeUW\",\n\t\"./te\": \"XLvN\",\n\t\"./te.js\": \"XLvN\",\n\t\"./tet\": \"V2x9\",\n\t\"./tet.js\": \"V2x9\",\n\t\"./tg\": \"Oxv6\",\n\t\"./tg.js\": \"Oxv6\",\n\t\"./th\": \"EOgW\",\n\t\"./th.js\": \"EOgW\",\n\t\"./tk\": \"Wv91\",\n\t\"./tk.js\": \"Wv91\",\n\t\"./tl-ph\": \"Dzi0\",\n\t\"./tl-ph.js\": \"Dzi0\",\n\t\"./tlh\": \"z3Vd\",\n\t\"./tlh.js\": \"z3Vd\",\n\t\"./tr\": \"DoHr\",\n\t\"./tr.js\": \"DoHr\",\n\t\"./tzl\": \"z1FC\",\n\t\"./tzl.js\": \"z1FC\",\n\t\"./tzm\": \"wQk9\",\n\t\"./tzm-latn\": \"tT3J\",\n\t\"./tzm-latn.js\": \"tT3J\",\n\t\"./tzm.js\": \"wQk9\",\n\t\"./ug-cn\": \"YRex\",\n\t\"./ug-cn.js\": \"YRex\",\n\t\"./uk\": \"raLr\",\n\t\"./uk.js\": \"raLr\",\n\t\"./ur\": \"UpQW\",\n\t\"./ur.js\": \"UpQW\",\n\t\"./uz\": \"Loxo\",\n\t\"./uz-latn\": \"AQ68\",\n\t\"./uz-latn.js\": \"AQ68\",\n\t\"./uz.js\": \"Loxo\",\n\t\"./vi\": \"KSF8\",\n\t\"./vi.js\": \"KSF8\",\n\t\"./x-pseudo\": \"/X5v\",\n\t\"./x-pseudo.js\": \"/X5v\",\n\t\"./yo\": \"fzPg\",\n\t\"./yo.js\": \"fzPg\",\n\t\"./zh-cn\": \"XDpg\",\n\t\"./zh-cn.js\": \"XDpg\",\n\t\"./zh-hk\": \"SatO\",\n\t\"./zh-hk.js\": \"SatO\",\n\t\"./zh-mo\": \"OmwH\",\n\t\"./zh-mo.js\": \"OmwH\",\n\t\"./zh-tw\": \"kOpN\",\n\t\"./zh-tw.js\": \"kOpN\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"RnhZ\";","/**\r\n * ======================================================================\r\n * Title: Bob's Computer Repair Shop\r\n * Author: Nicole Forke, Janet Blohn, Verlee Washington, and Joann Saeou\r\n * Date: 10/21/2020\r\n * Description: App component\r\n * ======================================================================\r\n */\r\n\r\n/**\r\n * Import statements\r\n */\r\nimport { Component } from '@angular/core';\r\n\r\n/**\r\n * Export component\r\n */\r\n@Component({\r\n  selector: 'app-root',\r\n  template: `<router-outlet></router-outlet>`,\r\n  styles: [``]\r\n})\r\nexport class AppComponent {\r\n}\r\n","/**\r\n * Title: orders.component.ts\r\n * Modifiers: Nicole Forke, Janet Blohn, and Joann Saeou\r\n * Date: 10/28/2020\r\n * Added By: Janet Blohn for testing purposes\r\n * Description: TypeScript for the Orders Component for Bob's Computer Repair Service\r\n */\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-orders',\r\n  templateUrl: './orders.component.html',\r\n  styleUrls: ['./orders.component.css']\r\n})\r\nexport class OrdersComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<h1>If you got here by creating an account or signing in, you're in the right place.</h1>\r\n","/**\r\n * ======================================================================\r\n * Title: Bob's Computer Repair Shop Capstone\r\n * Author: Nicole Forke, Janet Blohn, Verlee Washington, and Joann Saeou\r\n * Date: 10/25/2020\r\n * Modified by: Nicole Forke\r\n * Description: Signin Component\r\n * ======================================================================\r\n */\r\n/**\r\n * Import statements\r\n */\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-signin',\r\n  templateUrl: './signin.component.html',\r\n  styleUrls: ['./signin.component.css']\r\n})\r\n\r\n/**\r\n * Export component\r\n */\r\nexport class SigninComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n  errorMessage: string;\r\n\r\n  constructor(private router: Router, private cookieService: CookieService, private fb: FormBuilder, private http: HttpClient) {\r\n\r\n   }\r\n\r\n  ngOnInit() {\r\n    this.form = this.fb.group({\r\n      userName: [null, Validators.compose([Validators.required])],\r\n      password: [null, Validators.compose([Validators.required, Validators.pattern('^[a-zA-Z]+$')])]\r\n    });\r\n  }\r\n\r\n  signin() {\r\n    const userName = this.form.controls.userName.value;\r\n    const password = this.form.controls.password.value;\r\n\r\n    this.http.post('/api/session/signin', {\r\n      userName,\r\n      password\r\n    }).subscribe(res => {\r\n      console.log(\"This is the data in signin\");\r\n      console.log(res['data']);\r\n\r\n      if (res['data'].userName) {\r\n        /**\r\n         * User is authenticated and we can grant them access\r\n         */\r\n        if (res['data'].role.role === 'standard') {\r\n        this.cookieService.set('sessionUser', res['data'].userName, 1);\r\n        this.router.navigate(['/repair-services']);\r\n        } else {\r\n          if (res['data'].role.role === 'admin' || 'superAdmin') {\r\n        this.cookieService.set('sessionUser', res['data'].userName, 1);\r\n        this.router.navigate(['admin/site-maintenance']);\r\n        }\r\n      }\r\n    }\r\n\r\n    else{\r\n      //if(res['data'].userName !== null)\r\n      this.errorMessage=res['message'];\r\n    }\r\n\r\n    }, err => {\r\n\r\n\r\n      //this.errorMessage = err;\r\n      /*this.errorMessage = 'Invalid username or password. Please try again';\r\n      console.log(this.errorMessage);*/\r\n\r\n    });\r\n  }\r\n}\r\n","<br /><br />\r\n\r\n<div fxLayout=\"row wrap\" fxLayoutAlign=\"center start\">\r\n  <div fxFlex.gt-sm=\"55\" fxFlex=\"100\">\r\n    <mat-card class=\"mat-card-top pa-0\">\r\n      <mat-card-title style=\"text-align: center; font-size: 48px; font-weight: lighter;\" class=\"mat-headline\">User Sign In\r\n      </mat-card-title>\r\n      <br />\r\n      <mat-card-subtitle style=\"text-align: center; font-weight: lighter;\">\r\n        <a routerLink=\"/session/register\" class=\"register-link\">Create Account</a>\r\n      </mat-card-subtitle>\r\n\r\n      <br />\r\n      <mat-card-subtitle style=\"text-align: center;\" class=\"mat-headline\">You must enter a valid username and password to proceed</mat-card-subtitle>\r\n        <mat-card-content>\r\n          <!-- if there is an error message -->\r\n          <small style=\"color: #d8000c;\" *ngIf=\"errorMessage\">{{ errorMessage }}<br /></small>\r\n            <mat-card class=\"mat-elevation-z0\">\r\n              <form [formGroup]=\"form\" (ngSubmit)=\"signin(); form.reset()\" #loginForm=\"ngForm\">\r\n                <mat-card-content fxLayout=\"column\" fxLayoutGap=\"10px\">\r\n                  <mat-form-field>\r\n                    <input type=\"text\" matInput fxFlex [formControl]=\"form.controls['userName']\" placeholder=\"Username\" />\r\n                  </mat-form-field>\r\n                  <mat-form-field>\r\n                    <input type=\"password\" matInput fxFlex [formControl]=\"form.controls['password']\" placeholder=\"Password\" />\r\n                  </mat-form-field>\r\n                </mat-card-content>\r\n\r\n                <mat-card-actions>\r\n                  <button type=\"submit\" fxFlex mat-raised-button style=\"background-color: #04B504\" color=\"#000000\">Submit</button>\r\n                </mat-card-actions>\r\n                <br />\r\n                <div fxLayout=\"row wrap\">\r\n                  <a fxLayoutAlign=\"start\" style=\"width: 50%;\" class=\"forgot-password-link\" routerLink=\"/\">Cancel</a>\r\n                  <a fxLayoutAlign=\"end\" style=\"width: 50%;\" class=\"forgot-password-link\" routerLink=\"/session/forgot\">Forgot Password?</a>\r\n                </div>\r\n              </form>\r\n            </mat-card>\r\n          </mat-card-content>\r\n      </mat-card>\r\n  </div>\r\n</div>\r\n","/*\r\n============================================\r\n; Title:  app.module.ts\r\n * Added to project by Janet Blohn\r\n * Modifiers: Nicole Forke, Janet Blohn, Verlee Washington, Joann Saeou\r\n * Date: 10/24/2020\r\n * Description: Bobs Computer Repair Services\r\n * TypeScript App Module containing all required application and angular modules\r\n ============================================\r\n */\r\n​\r\n /* Import required modules from Angular */\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n​\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';  // added by Joann Saeou\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n/* Import Material Angular resources */\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatStepperModule } from '@angular/material/stepper'; // added by Joann Saeou\r\nimport { MatSelectModule } from '@angular/material/select'; // added by Joann Saeou\r\nimport { MatFormFieldModule } from '@angular/material/form-field'; // added by Joann Saeou\r\nimport { MatCheckboxModule } from '@angular/material/checkbox'; //Added 11/05 Janet\r\nimport { MatMenuModule } from '@angular/material/menu';\r\n\r\n/* Import Primeng */\r\nimport { ChartModule } from 'primeng/chart'; //Added 11/05 Janet\r\n​\r\n// Import required application modules and components\r\nimport { AppComponent } from './app.component';\r\nimport { HomeComponent } from './pages/home/home.component';\r\nimport { BaseLayoutComponent } from './shared/base-layout/base-layout.component';\r\nimport { AuthLayoutComponent } from './shared/auth-layout/auth-layout.component';\r\nimport { SecurityQuestionCreateComponent } from './pages/security-question-create/security-question-create.component';\r\nimport { SecurityQuestionListComponent } from './pages/security-question-list/security-question-list.component';\r\nimport { UserCreateComponent } from './pages/user-create/user-create.component';\r\nimport { UserListComponent } from './pages/user-list/user-list.component';\r\nimport { SigninComponent } from './pages/signin/signin.component';\r\nimport { DeleteRecordDialogComponent } from './shared/delete-record-dialog/delete-record-dialog.component'; // Added 10/27 Janet\r\nimport { UserDetailsComponent } from './pages/user-details/user-details.component';\r\nimport { SecurityQuestionDetailsComponent } from './pages/security-question-details/security-question-details.component';\r\nimport { AboutComponent } from './pages/about/about.component';\r\nimport { OrdersComponent } from './pages/orders/orders.component';\r\nimport { VerifySecurityQuestionsFormComponent } from './pages/verify-security-questions-form/verify-security-questions-form.component'; // added 10/30 Janet\r\nimport { ResetPasswordFormComponent } from './pages/reset-password-form/reset-password-form.component'; // Added 10/27 Janet\r\nimport { ErrorComponent } from './pages/error/error.component'; // added by Joann Saeou\r\nimport { ErrorInterceptor } from './shared/error.interceptor';\r\nimport { RegisterComponent } from './pages/register/register.component';\r\nimport { VerifyUsernameFormComponent } from './pages/verify-username-form/verify-username-form.component';\r\nimport { NotFoundComponent } from './pages/not-found/not-found.component'; // Added by Nicole Forke\r\nimport { ServerErrorComponent } from './pages/server-error/server-error.component';  // added by Joann Saeou\r\nimport { RoleCreateComponent } from './pages/role-create/role-create.component';  //Added 11/05 Janet\r\nimport { RoleListComponent } from './pages/role-list/role-list.component';  //Added 11/05 Janet\r\nimport { RoleDetailsComponent } from './pages/role-details/role-details.component';  //Added 11/05 Janet\r\nimport { PurchasesByServiceGraphComponent } from './pages/purchases-by-service-graph/purchases-by-service-graph.component';\r\nimport { InvoiceSummaryDialogComponent } from './dialog/invoice-summary-dialog/invoice-summary-dialog.component'; // added 11/07 Nicole Forke\r\nimport { RepairServicesComponent } from './pages/repair-services/repair-services.component';\r\nimport { SiteMaintenanceComponent } from './pages/site-maintenance/site-maintenance.component';   // added by Nicole Forke\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    BaseLayoutComponent,\r\n    AuthLayoutComponent,\r\n    DeleteRecordDialogComponent,\r\n    SecurityQuestionCreateComponent,\r\n    SecurityQuestionDetailsComponent,\r\n    SecurityQuestionListComponent,\r\n    UserCreateComponent,\r\n    UserDetailsComponent,\r\n    UserListComponent,\r\n    SigninComponent,\r\n    AboutComponent,\r\n    OrdersComponent,\r\n    VerifySecurityQuestionsFormComponent,\r\n    ResetPasswordFormComponent,\r\n    ErrorComponent,\r\n    RegisterComponent,\r\n    VerifyUsernameFormComponent,\r\n    NotFoundComponent,\r\n    ServerErrorComponent,\r\n    RoleCreateComponent,\r\n    RoleListComponent,\r\n    RoleDetailsComponent,\r\n    PurchasesByServiceGraphComponent,\r\n    InvoiceSummaryDialogComponent,\r\n    RepairServicesComponent,\r\n    SiteMaintenanceComponent\r\n  ],\r\n\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    FlexLayoutModule,\r\n    MatToolbarModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatInputModule,\r\n    MatCardModule,\r\n    MatTableModule,\r\n    MatDialogModule,\r\n    MatStepperModule,\r\n    MatSelectModule,\r\n    MatListModule,\r\n    MatFormFieldModule,\r\n    MatCheckboxModule,\r\n    MatMenuModule,\r\n    ChartModule\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true   // added by Joann Saeou\r\n    }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","/**\r\n * =====================================================================\r\n * Title: Bobs Computer Repair Shop Capstone\r\n * Author: Nicole Forke, Janet Blohn, Joann Saeou, and Verlee Washington\r\n * Date: 10/24/2020\r\n * Description: Security question service\r\n * ======================================================================\r\n */\r\n\r\n /**\r\n  * Import statements\r\n  */\r\n import { SecurityQuestion } from './security-question.interface';\r\n import { Injectable } from '@angular/core';\r\n import { HttpClient } from '@angular/common/http';\r\n import { Observable } from 'rxjs';\r\n\r\n @Injectable({\r\n   providedIn: 'root'\r\n })\r\n\r\n /**\r\n  * Export service\r\n  */\r\n export class SecurityQuestionService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  findAllSecurityQuestions(): Observable<any> {\r\n    return this.http.get('/api/securityQuestions');\r\n  }\r\n\r\n  findSecurityQuestionById(questionId: string): Observable<any> {\r\n    return this.http.get('/api/securityQuestions/' + questionId);\r\n  }\r\n\r\n  createSecurityQuestion(newSecurityQuestion: SecurityQuestion): Observable<any> {\r\n    return this.http.post('/api/securityQuestions', {\r\n      text: newSecurityQuestion.text\r\n    })\r\n  }\r\n\r\n  updateSecurityQuestion(questionId: string, updatedSecurityQuestion: SecurityQuestion): Observable<any> {\r\n    return this.http.put('/api/securityQuestions/' + questionId, {\r\n      text: updatedSecurityQuestion.text\r\n    })\r\n  }\r\n\r\n  deleteSecurityQuestion(questionId: string): Observable<any> {\r\n    return this.http.delete('/api/securityQuestions/' + questionId);\r\n  }\r\n }\r\n","// ============================================\r\n//  * Title:  error.interceptor.ts\r\n//  * Modifiers:Joann Saeou\r\n//  * Date: 10/29/2020\r\n//  * Description: SPRINT2 - Group 1 (BCRS) Error Interceptor\r\n//  *\r\n//  ============================================\r\n//  */\r\n//\r\n\r\n\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n\r\n\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n  constructor(private router: Router) { }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n    return next.handle(req).pipe(catchError(err => {\r\n\r\n      if ([404].indexOf(err.status) !== -1) {\r\n        this.router.navigate(['/session/404']);   // redirect to  the custom 404 error page\r\n      }\r\n\r\n      if ([500].indexOf(err.status) !== -1) {\r\n        this.router.navigate(['/session/500']);   // redirect to the custom 500 error page\r\n      }\r\n\r\n      // Otherwise, catch the error and throw\r\n      const error = err.error.message || err.statusText;\r\n      return throwError(error);\r\n\r\n    }));\r\n  }\r\n}\r\n","\r\n/* ============================================\r\n; Title:  role.guard.ts\r\n * Modifiers: Nicole Forke, Janet Blohn,  Joann Saeou\r\n * Date: 11/05/2020\r\n * Modified by: Joann Saeou\r\n * Description:  Role guard for roles\r\n ============================================\r\n *\r\n */\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { RoleService } from './role.service';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RoleGuard implements CanActivate {\r\n\r\n  constructor(private router: Router, private http: HttpClient, private cookieService: CookieService, private roleService: RoleService) { }\r\n\r\n   canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot) {\r\n\r\n    return this.roleService.findUserRole(this.cookieService.get('sessionUser')).pipe(map(res =>\r\n      {\r\n        if (res['data'].role === 'superAdmin')\r\n        {\r\n          return true;\r\n        }\r\n        else\r\n        {\r\n          this.router.navigate(['/']);\r\n          return false;\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n      }));\r\n\r\n  }\r\n\r\n}\r\n","/**\r\n * Title: user-create.component.ts\r\n * Author:  Nicole Forke, Janet Blohn, and Joann Saeou\r\n * Date: 11/08/2020\r\n * modified: Janet Blohn\r\n * Description: this is the site maintenance page for admin users only\r\n */\r\n\r\n /**\r\n  * Import statements\r\n  */\r\nimport { Component, OnInit, ViewChildren } from '@angular/core';\r\nimport { MatMenu, MatMenuTrigger } from '@angular/material/menu';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport { User } from '../../shared/user.interface';\r\nimport { UserService } from '../../shared/user.service';\r\n\r\n@Component({\r\n  selector: 'app-site-maintenance',\r\n  templateUrl: './site-maintenance.component.html',\r\n  styleUrls: ['./site-maintenance.component.css']\r\n})\r\n\r\n/**\r\n * Export component\r\n */\r\nexport class SiteMaintenanceComponent implements OnInit {\r\n\r\n  constructor(private fb: FormBuilder, private userService: UserService) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n}\r\n//this.userId = users/userId;\r\n","<!--\r\n * Title: site-maintenance.component.html\r\n * Modifiers: Nicole Forke, Janet Blohn, and Joann Saeou\r\n * Date: 11/07/2020\r\n * Added By: Janet Blohn\r\n * Description: HTML for the SiteMaintenance Component for Bob's Computer Repair Service\r\n -->\r\n <br /><br />\r\n\r\n<div fxLayout=\"row wrap\" fxLayoutAlign=\"center start\">\r\n  <div fxFlex.gt-sm=\"55\" fxFlex=\"100\">\r\n    <mat-card class=\"mat-card-top pa-0\">\r\n      <mat-card-title class=\"mat-headline\">Site Maintenance Menu</mat-card-title>\r\n      <br />\r\n      <mat-card-subtitle>Please click on one of the following options:</mat-card-subtitle>\r\n      <div fxLayout=\"column\" class=\"center-button\">\r\n        <!-- Create a Drop Down Menu for the User Maintenance Links -->\r\n        <button mat-raised-button class=\"site-button\" [matMenuTriggerFor]=\"user\">User Maintenance</button><br />\r\n        <mat-menu #user=\"matMenu\" xPosition=\"before\">\r\n          <ul style=\"list-style-type: none;\">\r\n            <li><a routerLink=\"/admin/users\" ><span>User Configuration List</span></a></li>\r\n          </ul>\r\n        </mat-menu>\r\n\r\n        <!-- Create a Drop Down Menu for the Role Maintenance Links -->\r\n        <button mat-raised-button class=\"site-button\" [matMenuTriggerFor]=\"role\">Role Maintenance</button><br />\r\n        <mat-menu #role=\"matMenu\" xPosition=\"before\">\r\n          <ul style=\"list-style-type: none; margin: 0, auto; text-align: center;\">\r\n            <li><a routerLink=\"/admin/roles\" ><span>Role Configuration List</span></a></li>\r\n            <li><a routerLink=\"/admin/roles/create/new\"><span>Create a Role</span></a></li>\r\n         </ul>\r\n        </mat-menu>\r\n\r\n        <!-- Create a Drop Down Menu for the Security Questions Maintenance Links -->\r\n        <button mat-raised-button class=\"site-button\" [matMenuTriggerFor]=\"secq\">Security Question Maintenance</button><br />\r\n        <mat-menu #secq=\"matMenu\" xPosition=\"before\">\r\n          <ul style=\"list-style-type: none;\">\r\n            <li><a routerLink=\"/admin/security-questions\" ><span>Security Questions List</span></a></li>\r\n            <li><a routerLink=\"/admin/security-questions/create/new\"><span>Create Security Questions</span></a></li>\r\n          </ul>\r\n        </mat-menu>\r\n\r\n        <!-- Create a Link to the Purchasable Services Graph -->\r\n        <button mat-raised-button class=\"site-button\"><a routerLink=\"/admin/purchases-by-service-graph\">Purchasable Services Graph</a></button>\r\n      </div>\r\n      <br />\r\n    </mat-card>\r\n  </div>\r\n</div>\r\n","/*\r\n============================================\r\n; Title:  delete-record-dialog.components.ts\r\n * Modifiers: Nicole Forke, Janet Blohn, Joann Saeou\r\n * Date: 10/26/2020\r\n * Description: Bobs Computer Repair Services\r\n * TypeScript for the UserDetails Component\r\n ============================================\r\n * Added to project 10/27/20 by Janet Blohn\r\n */\r\n\r\n /* Import required modules from Angular */\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n// Import required application modules and components\r\nimport { SecurityQuestionService } from './../../shared/security-question.service';\r\nimport { SecurityQuestion } from './../../shared/security-question.interface';\r\n\r\n@Component({\r\n  selector: 'app-security-question-details',\r\n  templateUrl: './security-question-details.component.html',\r\n  styleUrls: ['./security-question-details.component.css']\r\n})\r\nexport class SecurityQuestionDetailsComponent implements OnInit {\r\n  question: SecurityQuestion;\r\n  questionId: string;\r\n  form: FormGroup;\r\n\r\n  constructor(private route: ActivatedRoute, private http: HttpClient, private fb: FormBuilder, private router: Router, private securityQuestionService: SecurityQuestionService) {\r\n    this.questionId = this.route.snapshot.paramMap.get('questionId');\r\n    this.securityQuestionService.findSecurityQuestionById(this.questionId).subscribe(res => {\r\n      this.question = res['data'];\r\n    }, err => {\r\n      console.log(err);\r\n    }, () => {\r\n      this.form.controls.text.setValue(this.question.text);\r\n    })\r\n   }\r\n\r\n  ngOnInit() {\r\n    this.form = this.fb.group({\r\n      text: [null, Validators.compose([Validators.required])],\r\n    });\r\n  }\r\n\r\n  saveQuestion() {\r\n    const updatedSecurityQuestion = {} as SecurityQuestion;\r\n    updatedSecurityQuestion.text = this.form.controls.text.value;\r\n\r\n    this.securityQuestionService.updateSecurityQuestion(this.questionId, updatedSecurityQuestion).subscribe(res => {\r\n      this.router.navigate(['/admin/security-questions'])\r\n    })\r\n  }\r\n\r\n  cancel() {\r\n    this.router.navigate(['/admin/security-questions']);\r\n  }\r\n}\r\n","<!--\r\n=============================================================\r\n Title:  security-question-details.component.html\r\n * Modifiers: Nicole Forke, Janet Blohn, Joann Saeou\r\n * Date: 10/27/2020\r\n * Description: Bobs Computer Repair Services\r\n * HTML for the SecurityQuestionDetails Component\r\n ============================================\r\n * Added to project 10/27/20 by Janet Blohn\r\n=============================================================\r\n-->\r\n\r\n<div fxLayout=\"column\">\r\n  <mat-card class=\"mat-elevation-z8\">\r\n    <mat-card-title>Security Question Details</mat-card-title>\r\n    <br/>\r\n    <form [formGroup]=\"form\" (ngSubmit)=\"saveQuestion()\" #questionForm>\r\n      <mat-card-content>\r\n        <div fxLayout=\"column\" fxLayoutGap=\"10px\">\r\n          <mat-form-field>\r\n            <input matInput [formControl]=\"form.controls['text']\"\r\n                placeholder=\"Security question text...\" (keydown.enter)=\"saveQuestion()\" />\r\n          </mat-form-field>\r\n        </div>\r\n      </mat-card-content>\r\n\r\n      <br/>\r\n      <mat-card-actions align:end>\r\n        <button mat-raised-button (click)=\"cancel()\" color=\"warn\">Cancel</button>\r\n        <button mat-raised-button color=\"accent\">Submit</button>\r\n      </mat-card-actions>\r\n    </form>\r\n  </mat-card>\r\n</div>\r\n","/**\r\n * =====================================================================\r\n * Title: register.component\r\n * Author: Nicole Forke, Janet Blohn, and Joann Saeou\r\n * Date: 10/30/2020\r\n * Modified by: Joann Saeou\r\n * Description: Group 1 - Sprint 2 (BCRS) Register form\r\n * =====================================================================\r\n */\r\n\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { SecurityQuestion } from '../../shared/security-question.interface';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  securityQuestions: SecurityQuestion[];  // must be used with security question interface and [NOT] the security question  service\r\n  form: FormGroup;\r\n  registrationForm: FormGroup;\r\n  errorMessage: string;\r\n\r\n  address = '';  // function for the disabled next button for contact information\r\n  answer3 = '';   // function for the disabled next button for security question\r\n\r\n  constructor(private http: HttpClient, private router: Router, private fb: FormBuilder, private cookieService: CookieService) {\r\n    this.http.get('/api/securityQuestions').subscribe(res => {\r\n      this.securityQuestions = res['data'];\r\n    }, err => {\r\n\r\n        console.log(err);\r\n\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.registrationForm = new FormGroup({\r\n\r\n      //  contact information form\r\n      contactInformation: new FormGroup({\r\n        firstName: new FormControl(null, Validators.required),\r\n        lastName: new FormControl(null, Validators.required),\r\n        phoneNumber: new FormControl(null, Validators.required),\r\n        address: new FormControl(null, Validators.required),\r\n        email: new FormControl(null, Validators.required)\r\n\r\n      }),\r\n\r\n      //  security questions form\r\n      securityQuestions: new FormGroup({\r\n        securityQuestion1: new FormControl(null, Validators.required),\r\n        securityQuestion2: new FormControl(null, Validators.required),\r\n        securityQuestion3: new FormControl(null, Validators.required),\r\n        answerToSecurityQuestion1: new FormControl(null, Validators.required),\r\n        answerToSecurityQuestion2: new FormControl(null, Validators.required),\r\n        answerToSecurityQuestion3: new FormControl(null, Validators.required)\r\n\r\n      }),\r\n\r\n            // credentials form\r\n\r\n      credentials: new FormGroup({\r\n        userName: new FormControl(null, Validators.required),\r\n        password: new FormControl(null, Validators.required)\r\n      })\r\n    });\r\n  }\r\n\r\n  register(form) {\r\n  const contactInformation = form.contactInformation;\r\n  const securityQuestions = form.securityQuestions;\r\n  const credentials = form.credentials;\r\n\r\n// this form will let the user select the specific question\r\n  const selectedSecurityQuestions = [\r\n  {\r\n    questionText: securityQuestions.securityQuestion1,\r\n    answerText: securityQuestions.answerToSecurityQuestion1\r\n  },\r\n  {\r\n    questionText: securityQuestions.securityQuestion2,\r\n    answerText: securityQuestions.answerToSecurityQuestion2\r\n  },\r\n  {\r\n    questionText: securityQuestions.securityQuestion3,\r\n    answerText: securityQuestions.answerToSecurityQuestion3\r\n  }\r\n];\r\n\r\n  console.log(selectedSecurityQuestions);\r\n\r\n  this.http.post('/api/session/register', {\r\n    userName: credentials.userName,\r\n    password: credentials.password,\r\n    firstName: contactInformation.firstName,\r\n    lastName: contactInformation.lastName,\r\n    phoneNumber: contactInformation.phoneNumber,\r\n    address: contactInformation.address,\r\n    email: contactInformation.email,\r\n    selectedSecurityQuestions: selectedSecurityQuestions\r\n\r\n}).subscribe(res => {\r\n  if (res['data']) {\r\n\r\n     /**\r\n      * User is authenticated and we can grant them access\r\n      */\r\n\r\n    this.cookieService.set('sessionUser', credentials.userName);\r\n    this.router.navigate(['/repair-services']);\r\n  } else {\r\n\r\n    /**\r\n     *  User is  NOT authenticated and we should return the error message\r\n     *\r\n     */\r\n    this.errorMessage = res['text'];\r\n  }\r\n\r\n  }, err => {\r\n\r\n  console.log(err);\r\n  this.errorMessage = err;\r\n\r\n    });\r\n  }\r\n}\r\n","<br /> <br />\r\n<div fxLayout=\"row wrap\" fxLayoutAlign=\"center start\">\r\n  <div fxFlex.gt-sm=\"55\" fxFlex=\"100\">\r\n    <mat-card class=\"mat-card-top pa-0\">\r\n      <mat-card-title style=\"text-align: center; font-weight: lighter;\">Account Registration</mat-card-title>\r\n\r\n      <mat-card *ngIf=\"errorMessage\" class=\"mat-elevation-z0\" style=\"width: 75%;\">\r\n\r\n        <mat-card-content>\r\n          <div class=\"msg-error\" style=\"font-weight: lighter;\">\r\n            {{errorMessage}}\r\n            <br />\r\n          </div>\r\n        </mat-card-content>\r\n      </mat-card>\r\n\r\n      <!-- contact information form -->\r\n      <form id=\"regForm\" [formGroup]=\"registrationForm\">\r\n          <mat-card-content fxLayout=\"column\" fxLayoutGap=\"10px\">\r\n              <mat-horizontal-stepper #stepper>\r\n                  <mat-step fxFlex formGroupName=\"contactInformation\" [stepControl]=\"registrationForm.get('contactInformation')\">\r\n                    <ng-template matStepLabel>Contact Information</ng-template>\r\n\r\n                    <mat-list>\r\n                      <mat-list-item>\r\n                        <mat-form-field fxFlex>\r\n                          <input matInput formControlName=\"firstName\" placeholder=\"First Name\" />\r\n                        </mat-form-field>\r\n\r\n                        &nbsp; &nbsp; &nbsp; &nbsp;\r\n                        <mat-form-field fxFlex>\r\n                          <input matInput formControlName=\"lastName\" placeholder=\"Last Name\" />\r\n                        </mat-form-field>\r\n                      </mat-list-item>\r\n\r\n                      <mat-list-item>\r\n                        <mat-form-field fxFlex>\r\n                          <input matInput formControlName=\"phoneNumber\" placeholder=\"Phone Number\" />\r\n                        </mat-form-field>\r\n\r\n                        &nbsp; &nbsp; &nbsp; &nbsp;\r\n                        <mat-form-field fxFlex>\r\n                          <input matInput formControlName=\"email\" placeholder=\"Email\" />\r\n                        </mat-form-field>\r\n                      </mat-list-item>\r\n\r\n                      <br/><br/><br/>\r\n                      <mat-list-item>\r\n                        <mat-form-field fxFlex>\r\n                          <textarea matInput formControlName=\"address\" rows=\"1\" placeholder=\"Address\" id=\"address\" [(ngModel)]=\"address\"></textarea>\r\n                        </mat-form-field>\r\n                      </mat-list-item>\r\n                    </mat-list>\r\n\r\n                    <br/><br/><br/>\r\n                    <div fxLayoutAlign=\"end\" fxFlex>\r\n                      <button mat-raised-button style=\"background-color: #04B504\" color=\"000000\" [disabled]=\"address === ''\" matStepperNext>Next</button>\r\n                    </div>\r\n                  </mat-step>\r\n                  <!-- ends here contact information form -->\r\n\r\n                  <!-- Security Question form-->\r\n                  <mat-step formGroupName=\"securityQuestions\" [stepControl]=\"registrationForm.get('securityQuestions')\">\r\n                    <ng-template matStepLabel>Security Questions</ng-template>\r\n                    <mat-list>\r\n                      <mat-list-item>\r\n                        <mat-form-field fxFlex>\r\n                          <mat-select formControlName=\"securityQuestion1\" placeholder=\"Security Question\">\r\n                            <mat-option *ngFor=\"let question of securityQuestions\" [value]=\"question.text\">\r\n                              {{ question.text }}\r\n                            </mat-option>\r\n                          </mat-select>\r\n                        </mat-form-field>\r\n\r\n                        &nbsp; &nbsp; &nbsp; &nbsp;\r\n                        <mat-form-field fxFlex>\r\n                          <input matInput formControlName=\"answerToSecurityQuestion1\" placeholder=\"Answer 1\" id=\"answerToSecurityQuestion1\"  />\r\n                        </mat-form-field>\r\n                      </mat-list-item>\r\n\r\n                      <mat-list-item>\r\n                        <mat-form-field fxFlex>\r\n                          <mat-select formControlName=\"securityQuestion2\" placeholder=\"Security Question\">\r\n                            <mat-option *ngFor=\"let question of securityQuestions\" [value]=\"question.text\">\r\n                              {{ question.text }}\r\n                            </mat-option>\r\n                          </mat-select>\r\n                        </mat-form-field>\r\n\r\n                        &nbsp; &nbsp; &nbsp; &nbsp;\r\n                        <mat-form-field fxFlex>\r\n                          <input matInput formControlName=\"answerToSecurityQuestion2\" placeholder=\"Answer 2\" />\r\n                        </mat-form-field>\r\n                      </mat-list-item>\r\n\r\n                      <mat-list-item>\r\n                        <mat-form-field fxFlex>\r\n                          <mat-select formControlName=\"securityQuestion3\" placeholder=\"Security Question\">\r\n                            <mat-option *ngFor=\"let question of securityQuestions\" [value]=\"question.text\">\r\n                              {{question.text}}\r\n                            </mat-option>\r\n                          </mat-select>\r\n                        </mat-form-field>\r\n\r\n                        &nbsp; &nbsp;\r\n                        <mat-form-field fxFlex style=\"padding-left: 15px\">\r\n                          <input matInput formControlName=\"answerToSecurityQuestion3\" placeholder=\"Answer 3\" id=\"answer3\" [(ngModel)]=\"answer3\" />\r\n                        </mat-form-field>\r\n                      </mat-list-item>\r\n                    </mat-list>\r\n\r\n                    <div fxLayoutAlign=\"end\">\r\n                      <button mat-raised-button style=\"background-color: #FFFF00\" color=\"000000\" matStepperPrevious>Back</button> &nbsp;&nbsp; &nbsp; &nbsp;&nbsp;\r\n                      <button mat-raised-button style=\"background-color: #04B504\" color=\"000000\" [disabled]=\"answer3 === ''\" matStepperNext>Next</button>\r\n                    </div>\r\n                  </mat-step>\r\n                  <!-- end of Security Question form-->\r\n\r\n                  <!-- Credentials form -->\r\n                  <mat-step formGroupName=\"credentials\" [stepControl]=\"registrationForm.get('credentials')\">\r\n                    <ng-template matStepLabel>Credentials</ng-template>\r\n                    <mat-list>\r\n                      <mat-list-item>\r\n                        <mat-form-field fxFlex>\r\n                          <input matInput formControlName=\"userName\" placeholder=\"User name\" />\r\n                        </mat-form-field>\r\n                      </mat-list-item>\r\n\r\n                      <br/><br/>\r\n                      <mat-list-item>\r\n                        <mat-form-field fxFlex>\r\n                          <input type=\"password\" matInput formControlName=\"password\" placeholder=\"Password\" />\r\n                        </mat-form-field>\r\n                      </mat-list-item>\r\n                    </mat-list>\r\n\r\n                    <div fxLayoutAlign=\"end\">\r\n                      <button mat-raised-button style=\"background-color: #FFFF00\" color=\"000000\" matStepperPrevious>Back</button> &nbsp; &nbsp;&nbsp;&nbsp;&nbsp;\r\n                      <button mat-raised-button (click)=\"register(registrationForm.value)\" style=\"background-color: #04B504\" color=\"000000\" [disabled]=\"!registrationForm.valid\" type=\"submit\">Submit</button>\r\n                    </div>\r\n                  </mat-step>\r\n                  <!-- end of Credentials form -->\r\n                </mat-horizontal-stepper>\r\n          </mat-card-content>\r\n        </form>\r\n      </mat-card>\r\n    </div>\r\n  </div>\r\n","/**\r\n * ======================================================================\r\n * Title: Bob's Computer Repair Shop Capstone\r\n * Author: Nicole Forke, Janet Blohn, and Joann Saeou\r\n * Date: 11/07/2020\r\n * Modified by: Nicole Forke\r\n * Description: Repair Services Component\r\n * ======================================================================\r\n */\r\n\r\n /**\r\n  * Import statements\r\n  */\r\n import { Component, OnInit } from '@angular/core';\r\n import { ServiceRepairItem } from './../../shared/service-repair-item.interface';\r\n import { InvoiceSummaryDialogComponent } from './../../dialog/invoice-summary-dialog/invoice-summary-dialog.component';\r\n import { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\n import { Router } from '@angular/router';\r\n import { MatDialog } from '@angular/material/dialog';\r\n import { CookieService } from 'ngx-cookie-service';\r\n import { HttpClient } from '@angular/common/http';\r\n import { ServiceRepairService } from '../../shared/service-repair.service';\r\n import { LineItem } from '../../shared/line-item.interface';\r\n import { Invoice } from '../../shared/invoice.interface';\r\n import { InvoiceService } from '../../shared/invoice.service';\r\n \r\n \r\n @Component({\r\n   selector: 'app-repair-services',\r\n   templateUrl: './repair-services.component.html',\r\n   styleUrls: ['./repair-services.component.css']\r\n })\r\n \r\n /**\r\n  * Export component\r\n  */\r\n export class RepairServicesComponent {\r\n \r\n \r\n \r\n   // create form\r\n   form: FormGroup;\r\n   userName: string;\r\n   services: ServiceRepairItem[];\r\n   lineItems: LineItem[];\r\n   parts = new FormControl;\r\n   labor = new FormControl;\r\n \r\n \r\n   number = '' // disabled the submit button added by joann so nicole can take a look at it\r\n \r\n \r\n   constructor(private http: HttpClient, private cookieService: CookieService, private fb: FormBuilder, private dialog: MatDialog,\r\n               private router: Router, private serviceRepairService: ServiceRepairService, private invoiceService: InvoiceService) {\r\n \r\n     // get the username\r\n     this.userName = this.cookieService.get('sessionUser');\r\n \r\n     this.services = this.serviceRepairService.getServiceRepairItems();\r\n   }\r\n \r\n \r\n   ngOnInit(): void {\r\n     this.form = this.fb.group({\r\n       parts: [0, Validators.compose([Validators.required])],\r\n       labor: [0, Validators.compose([Validators.required])]\r\n \r\n     });\r\n   }\r\n \r\n   // function to return error message for parts added by: Nicole Forke\r\n   getPartsErrorMessage() {\r\n     if (this.parts.hasError('required')) {\r\n       return 'Parts fee rquired';\r\n     }\r\n   };\r\n \r\n   getLaborErrorMessage() {\r\n     if (this.labor.hasError('required')) {\r\n       return 'Labor fee required';\r\n     }\r\n   };\r\n \r\n \r\n \r\n   // submit the form\r\n   submit(form) {\r\n     console.log(form);\r\n     const selectedServiceIds = [];\r\n     for (const [key, value] of Object.entries(form.checkGroup)) {\r\n       if (value) {\r\n         selectedServiceIds.push({\r\n           id: key\r\n         });\r\n       }\r\n     }\r\n \r\n     this.lineItems = [];\r\n \r\n     /**\r\n      * Build the invoice object\r\n      */\r\n     for (const savedService of this.services) {\r\n       for (const selectedService of selectedServiceIds) {\r\n         if (savedService.id === selectedService.id) {\r\n           this.lineItems.push({\r\n             title: savedService.title,\r\n             price: savedService.price\r\n           });\r\n         }\r\n       }\r\n     }\r\n \r\n     console.log(this.lineItems);\r\n \r\n     // calculate the selected services\r\n     const partsAmount = parseFloat(form.parts);\r\n     const laborAmount = form.labor * 50;\r\n     const lineItemTotal = this.lineItems.reduce((prev, cur) => prev + cur.price, 0);\r\n     const total = partsAmount + laborAmount + lineItemTotal;\r\n \r\n     // create invoice\r\n     const invoice = {\r\n       userName: this.userName,\r\n       lineItems: this.lineItems,\r\n       partsAmount: partsAmount,\r\n       laborAmount: laborAmount,\r\n       lineItemTotal: lineItemTotal,\r\n       total: total,\r\n       orderDate: new Date()\r\n     } as Invoice;\r\n \r\n     console.log(invoice);\r\n \r\n     // create invoice summary dialog\r\n     const dialogRef = this.dialog.open(InvoiceSummaryDialogComponent, {\r\n       data: {\r\n         invoice: invoice\r\n       },\r\n       disableClose: true,\r\n       width: '800px'\r\n     });\r\n \r\n     dialogRef.afterClosed().subscribe(result => {\r\n       if (result === 'confirm') {\r\n         console.log('Invoice saved');\r\n \r\n         this.invoiceService.createInvoice(invoice.userName, invoice).subscribe(res => {\r\n           this.router.navigate(['/']);\r\n         }, err => {\r\n           console.log(err);\r\n         })\r\n       }\r\n     });\r\n   }\r\n \r\n   /**\r\n  * cancel the navigation link\r\n  */\r\n   cancel() {\r\n     this.router.navigate(['/']);\r\n   }\r\n }\r\n ","<div fxLayout=\"column\" class=\"repair-service\">\r\n    <br />\r\n    <p class=\"title\">\r\n        Welcome to Bob's Computer Repair Shop! Our services are listed below. Once you check your desired services, an invoice will display <br> showing the total charges. You can change your order anytime before submitting it.\r\n    </p>\r\n</div>\r\n<br />\r\n\r\n<mat-card class=\"mat-elevation-z8\">\r\n    <form #serviceRepairForm=\"ngForm\" (ngSubmit)=\"submit(serviceRepairForm.value); serviceRepairForm.reset();\">\r\n        <mat-card-content>\r\n            <!-- service repair -->\r\n            <div fxLayout=\"column\">\r\n                <h4 fxFlex>Services</h4>\r\n\r\n                <div ngModelGroup=\"checkGroup\" *ngFor=\"let service of services\">\r\n                    <mat-checkbox name=\"{{ service.id }}\" ngModel>\r\n                        {{ service.title }} ({{ service.price | currency }})\r\n                    </mat-checkbox>\r\n\r\n                    <br />\r\n                </div>\r\n            </div>\r\n\r\n            <br />\r\n            <mat-divider></mat-divider>\r\n            <br />\r\n            <!-- parts & labor -->\r\n            <div fxLayout=\"column\">\r\n                <h4 fxFlex>Standard Fees</h4>\r\n\r\n                <mat-form-field fxFlex style=\"width: 300px !important;\">\r\n                    <input matInput required\r\n                           name=\"parts\"\r\n                           type=\"number\"\r\n                           ngModel=\"0\"\r\n                           placeholder=\"Part Fees\" />\r\n                        <mat-error *ngIf=\"parts.invalid\"> {{ getPartsErrorMessage() }}</mat-error>\r\n                </mat-form-field>\r\n\r\n                <mat-form-field fxFlex style=\"width: 300px !important;\">\r\n                    <!-- // added the ngModel with value 1 added by joann -->\r\n                    <input matInput required\r\n                           name=\"labor\"\r\n                           type=\"number\"\r\n                           [(ngModel)]=\"number\"\r\n                           placeholder=\"Labor @ 50.00/hr\" />\r\n                        <mat-error *ngIf=\"labor.invalid\"> {{ getLaborErrorMessage() }}</mat-error>\r\n                </mat-form-field>\r\n            </div>\r\n        </mat-card-content>\r\n\r\n        <!-- form actions -->\r\n        <br />\r\n        <mat-divider></mat-divider>\r\n        <br />\r\n        <mat-card-actions align=\"end\">\r\n            <button mat-raised-button (click)=\"cancel()\" style=\"background-color: #FFFF00;\" color=\"#000000\">Cancel</button>\r\n            <!--  added the disabled for the submit button added by joann -->\r\n            <button mat-raised-button style=\"background-color: #04B504;\" [disabled]=\"number === ''\" color=\"#000000\">Submit</button>\r\n        </mat-card-actions>\r\n    </form>\r\n</mat-card>","/**\r\n * ======================================================================\r\n * Title: service-repair.service.ts\r\n * Author: Nicole Forke, Janet Blohn and Joann Saeou\r\n * Date: 11/06/2020\r\n * Modified by: Joann Saeou\r\n * Description: Group 1 - BCRS - service showing repair service\r\n * ======================================================================\r\n */\r\n\r\n/* Import required modules from Angular */\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n\r\n/* Import required application files */\r\nimport { Invoice } from '../shared/invoice.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class InvoiceService {\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  createInvoice(userName: string, invoice: Invoice): Observable<any> {\r\n    return this.http.post('/api/invoices/' + userName, {\r\n      userName: userName,\r\n      lineItems: invoice.lineItems,\r\n      partsAmount: invoice.partsAmount,\r\n      laborAmount: invoice.laborAmount,\r\n      lineItemTotal: invoice.lineItemTotal,\r\n      total: invoice.total\r\n    });\r\n  }\r\n\r\n  findPurchasesByServiceGraph() {\r\n    return this.http.get('/api/invoices/purchases-graph');\r\n  }\r\n}\r\n","/**\r\n * Title: role-list.component.ts\r\n * Modifiers: Nicole Forke, Janet Blohn, and Joann Saeou\r\n * Date: 11/05/2020\r\n * Added By: Janet Blohn\r\n * Description: TypeScript for the RoleList Component for Bob's Computer Repair Service\r\n */\r\n/* Import required modules from Angular */\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\n// Import required application modules and components\r\nimport { DeleteRecordDialogComponent } from '../../shared/delete-record-dialog/delete-record-dialog.component';\r\nimport { Role } from '../../shared/role.interface';\r\nimport { RoleService } from '../../shared/role.service';\r\n\r\n@Component({\r\n  selector: 'app-role-list',\r\n  templateUrl: './role-list.component.html',\r\n  styleUrls: ['./role-list.component.css']\r\n})\r\nexport class RoleListComponent implements OnInit {\r\n  roles: Role[];\r\n  displayedColumns = ['role', 'functions'];\r\n\r\n  constructor(private dialog: MatDialog, private roleService: RoleService) {\r\n    this.roleService.findAllRoles().subscribe(res => {\r\n      this.roles = res['data'];\r\n    }, err => {\r\n      console.log(err);\r\n    })\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  delete(recordId: string, roleText: string) {\r\n    const dialogRef = this.dialog.open(DeleteRecordDialogComponent, {\r\n      data: {\r\n        recordId,\r\n        dialogHeader: \"Are you sure you want to delete role:\",\r\n        dialogBody: `${roleText}`\r\n      },\r\n      disableClose: true,\r\n      width: '400px'\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result === 'confirm') {\r\n        this.roleService.deleteRole(recordId).subscribe(res => {\r\n          console.log('Role deleted')\r\n          this.roles = this.roles.filter(role => role._id !== recordId);\r\n        })\r\n      }\r\n    });\r\n  }\r\n}\r\n","<!--\r\n * Title: role-list.component.html\r\n * Modifiers: Nicole Forke, Janet Blohn, and Joann Saeou\r\n * Date: 11/05/2020\r\n * Added By: Janet Blohn\r\n * Description: HTML for the RoleList Component for Bob's Computer Repair Service\r\n -->\r\n<div fxLayout=\"column\">\r\n  <mat-card>\r\n    <mat-card-title>Role Configuration</mat-card-title>\r\n    <mat-card-subtitle>\r\n      <button mat-button routerLink=\"/admin/roles/create/new\" color=\"accent\">Create</button>\r\n      <button mat-button routerLink=\"/admin/site-maintenance\" color=\"accent\">Cancel</button>\r\n    </mat-card-subtitle>\r\n\r\n    <br/>\r\n    <mat-card-content *ngIf=\"roles\">\r\n      <table mat-table [dataSource]=\"roles\">\r\n        <ng-container matColumnDef=\"role\">\r\n          <th mat-header-cell *matHeaderCellDef>Role</th>\r\n          <td mat-cell *matCellDef=\"let element\">\r\n            {{element.text}}\r\n          </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"functions\">\r\n          <th mat-header-cell *matHeaderCellDef>Functions</th>\r\n          <td mat-cell *matCellDef=\"let element\">\r\n            <button mat-icon-button routerLink=\"/admin/roles/{{element._id}}\">\r\n              <mat-icon color=\"accent\">edit</mat-icon>\r\n          </button>\r\n          <button mat-icon-button (click)=\"delete(element._id, element.text)\">\r\n            <mat-icon color=\"accent\">delete</mat-icon>\r\n          </button>\r\n          </td>\r\n        </ng-container>\r\n\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n      </table>\r\n    </mat-card-content>\r\n  </mat-card>\r\n</div>\r\n","/*\r\n============================================\r\n; Title:  delete-record-dialog.components.ts\r\n * Modifiers: Nicole Forke, Janet Blohn, Joann Saeou\r\n * Date: 10/26/2020\r\n * Description: Bobs Computer Repair Services\r\n * TypeScript for the UserDetails Component\r\n ============================================\r\n * Added to project 10/26/20 by Janet Blohn\r\n * Janet 10/27/20 Deleted import comment for application modules\r\n */\r\n\r\n /* Import required modules from Angular */\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-delete-record-dialog',\r\n  templateUrl: './delete-record-dialog.component.html',\r\n  styleUrls: ['./delete-record-dialog.component.css']\r\n})\r\nexport class DeleteRecordDialogComponent implements OnInit {\r\n  recordId: string;\r\n  dialogHeader: string;\r\n  dialogBody: string;\r\n\r\n  constructor(private dialogRef: MatDialogRef<DeleteRecordDialogComponent>, @Inject(MAT_DIALOG_DATA) data) {\r\n    this.recordId = data.recordId;\r\n    this.dialogHeader = data.dialogHeader;\r\n    this.dialogBody = data.dialogBody;\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n}\r\n","<!--\r\n=============================================================\r\n Title:  user-details.component.html\r\n * Modifiers: Nicole Forke, Janet Blohn, Joann Saeou\r\n * Date: 10/26/2020\r\n * Description: Bobs Computer Repair Services\r\n * HTML for the UserDetails Component\r\n ============================================\r\n * Added to project 10/26/20 by Janet Blohn\r\n=============================================================\r\n-->\r\n<h2 mat-dialog-title>{{ dialogHeader }} </h2>\r\n\r\n<mat-dialog-content>\r\n  <p><strong> {{ dialogBody }} </strong></p>\r\n  <small style=\"color: #DF435A;\">WARNING: This cannot be undone.</small>\r\n</mat-dialog-content>\r\n\r\n<hr/>\r\n\r\n<mat-dialog-actions>\r\n  <div fxLayout=\"row wrap\" fxLayout-align=\"end\">\r\n\r\n  <button mat-raised-button matDialogClose=\"cancel\" color=\"primary\">No Thanks</button>\r\n  <button mat-raised-button matDialogClose=\"confirm\" color=\"accent\" cdkFocusInitial>Accept</button>\r\n</div>\r\n</mat-dialog-actions>\r\n\r\n","/**\r\n * =====================================================================\r\n * Title: Bobs Computer Repair Shop\r\n * Author: Nicole Forke, Janet Blohn, Verlee Washington, and Joann Saeou\r\n * Date: 10/22/2020\r\n * Modified by: Nicole Forke\r\n * Description: Security question model\r\n * =====================================================================\r\n */\r\n\r\n/**\r\n * Import Statements\r\n */\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { SecurityQuestionService } from './../../shared/security-question.service';\r\nimport { SecurityQuestion } from './../../shared/security-question.interface';\r\nimport { DeleteRecordDialogComponent } from './../../shared/delete-record-dialog/delete-record-dialog.component';\r\n\r\n@Component({\r\n  selector: 'app-security-question-list',\r\n  templateUrl: './security-question-list.component.html',\r\n  styleUrls: ['./security-question-list.component.css']\r\n})\r\n\r\n/**\r\n * Export Component\r\n */\r\nexport class SecurityQuestionListComponent implements OnInit {\r\n\r\n  securityQuestions: SecurityQuestion [];\r\n  displayedColumns = [ 'question', 'functions'];\r\n\r\n  constructor(private http: HttpClient, private dialog: MatDialog, private securityQuestionService: SecurityQuestionService) {\r\n    this.securityQuestionService.findAllSecurityQuestions().subscribe(res => {\r\n      this.securityQuestions = res['data'];\r\n    }, err => {\r\n      console.log(err);\r\n    });\r\n   }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  delete(recordId: string, securityQuestionText: string) {\r\n    const dialogRef = this.dialog.open(DeleteRecordDialogComponent, {\r\n      data: {\r\n        recordId,\r\n        dialogHeader: \"Are you sure you want to delete security question:\",\r\n        dialogBody: `${securityQuestionText}`\r\n      },\r\n      disableClose: true,\r\n      width: '500px'\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result === 'confirm') {\r\n        this.securityQuestionService.deleteSecurityQuestion(recordId).subscribe(res => {\r\n          console.log('Security question deleted');\r\n          this.securityQuestions = this.securityQuestions.filter(q => q._id !== recordId);\r\n       });\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div layout=\"column\" class=\"whiteWindow\" style=\"position: relative; width: 1000px; float: center; margin-right: 80px; margin-left: 80px;\">\r\n    <mat-card>\r\n\r\n        <mat-card-title style=\"position: relative;\r\n        top: 10px; left: 270px; font-family: fantasy;\"> Security Questions list configuration</mat-card-title>\r\n\r\n        <mat-card-subtitle style=\"position: relative;\r\n        top: 10px; left: 270px; clear:both\">\r\n\r\n            <button mat-button routerLink=\"/admin/security-questions/create/new\" color=\"accent\">Create</button>\r\n            <button mat-button routerLink=\"/admin/site-maintenance\" color=\"accent\">Cancel</button>\r\n\r\n        </mat-card-subtitle>\r\n\r\n        <br/>\r\n        <mat-card-content *ngIf=\"securityQuestions\" class=\"box\" style=\"float:inline-start; width: 600px; position: relative;\r\n        top: 10px; left: 5px; bottom: 0px; clear:both \">\r\n            <table mat-table [dataSource]=\"securityQuestions\">\r\n\r\n\r\n                <ng-container matColumnDef=\"question\">\r\n                    <th mat-header-cell *matHeaderCellDef>Question</th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n                        {{ element.text }}\r\n\r\n                    </td>\r\n\r\n                    <!-- this is the function for edit/delete column -->\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"functions\">\r\n                    <th mat-header-cell *matHeaderCellDef>Functions</th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n                        <button mat-icon-button routerLink=\"/admin/security-questions/{{element._id}}\">\r\n              <mat-icon color=\"accent\">edit</mat-icon>\r\n            </button>\r\n                        <button mat-icon-button (click)=\"delete(element._id, element.text)\">\r\n              <mat-icon color=\"accent\">delete</mat-icon>\r\n            </button>\r\n                    </td>\r\n                </ng-container>\r\n\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n            </table>\r\n        </mat-card-content>\r\n    </mat-card>\r\n</div>\r\n","/**\r\n * Title: role-details.component.ts\r\n * Modifiers: Nicole Forke, Janet Blohn, and Joann Saeou\r\n * Date: 11/05/2020\r\n * Added By: Janet Blohn\r\n * Description: TypeScript for the RoleDetails Component for Bob's Computer Repair Service\r\n */\r\n/* Import required modules from Angular */\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n// Import required application modules and components\r\nimport { RoleService } from '../../shared/role.service';\r\nimport { Role } from '../../shared/role.interface';\r\n\r\n@Component({\r\n  selector: 'app-role-details',\r\n  templateUrl: './role-details.component.html',\r\n  styleUrls: ['./role-details.component.css']\r\n})\r\nexport class RoleDetailsComponent implements OnInit {\r\n  form: FormGroup;\r\n  role: Role;\r\n  roleId: string;\r\n\r\n  constructor(private route: ActivatedRoute, private fb: FormBuilder, private router: Router, private roleService: RoleService) {\r\n    this.roleId = this.route.snapshot.paramMap.get('roleId');\r\n\r\n    this.roleService.findRoleById(this.roleId).subscribe(res => {\r\n      this.role = res['data'];\r\n    }, err => {\r\n      console.log(err);\r\n    }, () => {\r\n      this.form.controls['text'].setValue(this.role.text);\r\n    })\r\n   }\r\n\r\n  ngOnInit() {\r\n    this.form = this.fb.group({\r\n      text: [null, Validators.compose([Validators.required])]\r\n    });\r\n  }\r\n\r\n  save() {\r\n    const updatedRole = {\r\n      text: this.form.controls['text'].value\r\n    } as Role;\r\n\r\n    this.roleService.updateRole(this.roleId, updatedRole).subscribe(res => {\r\n      this.router.navigate (['admin/roles']);\r\n    }, err => {\r\n      console.log(err);\r\n    })\r\n  }\r\n\r\n    // Cancel out and navigate back to the main page for roles\r\n  cancel() {\r\n    this.router.navigate(['admin/roles']);\r\n  }\r\n}\r\n","<!--\r\n * Title: role-details.component.html\r\n * Modifiers: Nicole Forke, Janet Blohn, and Joann Saeou\r\n * Date: 11/05/2020\r\n * Added By: Janet Blohn\r\n * Description: HTML for the RoleDetails Component for Bob's Computer Repair Service\r\n -->\r\n<div fxLayout=\"column\">\r\n  <mat-card class=\"mat-elevation-z8\">\r\n    <mat-card-title>Role Details</mat-card-title>\r\n\r\n    <br/>\r\n    <form [formGroup]=\"form\" (ngSubmit)=\"save()\" #roleForm>\r\n      <mat-card-content>\r\n        <mat-form-field>\r\n          <input matInput\r\n                  [formControl]=\"form.controls['text']\"\r\n                  placeholder=\"Role\"/>\r\n        </mat-form-field>\r\n      </mat-card-content>\r\n\r\n      <br/>\r\n      <mat-card-actions align:end>\r\n        <button mat-raised-button color=\"warn\" (click)=\"cancel()\">Cancel</button>\r\n        <button mat-raised-button color=\"accent\">Submit</button>\r\n      </mat-card-actions>\r\n    </form>\r\n  </mat-card>\r\n</div>\r\n","/*\r\n============================================\r\n; Title:  about.component.ts\r\n; Authors: Nicole Forke, Janet Blohn, and Joann Saeou\r\n; Date:   28 October 2020\r\n; Added By: Janet Blohn\r\n; Description: Bob's Computer Repair Services Project\r\n; Typescript for About Component\r\n============================================\r\n*/\r\n\r\n/* Import required modules from Angular */\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-about',\r\n  templateUrl: './about.component.html',\r\n  styleUrls: ['./about.component.css']\r\n})\r\nexport class AboutComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<!--\r\n=============================================================\r\n Title:  about.component.html\r\n * Modifiers: Nicole Forke, Janet Blohn, Joann Saeou\r\n * Date:   28 October 2020\r\n * Added By: Janet Blohn\r\n * Description: Bobs Computer Repair Services project\r\n * HTML for Bob's Computer Repair Services about.component\r\n=============================================================\r\n-->\r\n\r\n<div>\r\n  <div fxLayout=\"row\">\r\n    <div  fxFlex>\r\n      <h1>Who We Are</h1>\r\n      <div class=\"normal-p\">\r\n        <p>\r\n          Welcome to Bob's Computer Repair Shop! Your one-stop shop for all your computer repair needs. We have been in business for 25 years, helping people throughout the city with computer repair issues, ranging from password resets to RAM upgrades.\r\n        </p>\r\n        <p>\r\n          We started in our garage, by removing parts from computers and doing research to learn new techniques on how to maintain and repair our personal computers/laptops. With all the pieces and parts within a computer it can be difficult to maintain one on your own. Wh had friends and family who also needed assistance with their personal computers/laptops so we offered to help. Word spread about the great job we were doing as a side business thanks to them. Within a year, our services started to grow, as did our customer base. This is how we became known as Bob's Computer Repair Services.\r\n        </p>\r\n        <p>\r\n          We are planning on offering repair services for you mobile devices in the near future. This includes: iPads, iPhones, Android devices, Kindle, Nook, and Fire Tablets. We will also begin to service your smart TVs for any needed computer-related repairs.\r\n        </p>\r\n        <p>\r\n          We guarantee our services because we know our highly-skilled technicians will do an excellent job. Unlike the company's founders, our technicians didn't learn from experimenting in their garages and doing research online. Instead, they have completed accredited training in these services. We have become known as the number one shop for gaming computer repair thanks to these talented individuals. You will always receive friendly, professional service from anyone working at Bob's Computer Repair Services. Now that we've moved out of the garage, we offer online services 24 hours a day.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n<!-- Create the layout for the contact info. -->\r\n  <div fxLayout=\"row\" style=\"padding-bottom: 5%\">\r\n\r\n    <!-- Layout for the Mailing Address Column -->\r\n    <div fxFlex>\r\n      <mat-card class=\"mat-elevation-z0 mat-card-color\">\r\n        <mat-card-title class=\"card-title-icon\">\r\n          <mat-icon color=\"primary\" inline=true>contact_mail</mat-icon>\r\n        </mat-card-title>\r\n        <br />\r\n        <mat-card-content class=\"align-center\">\r\n          <p>\r\n            1234 Corn Street\r\n          </p>\r\n          <p>\r\n            Huskerville, NE 68123\r\n          </p>\r\n        </mat-card-content>\r\n      </mat-card>\r\n    </div>\r\n    <!-- Layout for the Phone Number Column -->\r\n    <div fxFlex>\r\n      <mat-card class=\"mat-elevation-z0 mat-card-color\">\r\n        <mat-card-title class=\"card-title-icon\">\r\n          <mat-icon color=\"primary\" inline=true>contact_phone</mat-icon>\r\n        </mat-card-title>\r\n        <br />\r\n\r\n        <mat-card-content class=\"align-center\">\r\n          <p>\r\n            Direct: 402-896-5899\r\n          </p>\r\n          <p>\r\n            Toll-free: 1-888-896-5899\r\n          </p>\r\n          <p>\r\n            Fax: 402-896-5900\r\n          </p>\r\n          <br />\r\n        </mat-card-content>\r\n      </mat-card>\r\n    </div>\r\n    <!-- Layout for the eMail Address Column -->\r\n    <div fxFlex>\r\n      <mat-card class=\"mat-elevation-z0 mat-card-color\">\r\n        <mat-card-title class=\"card-title-icon\">\r\n          <mat-icon color=\"primary\" inline=true>email</mat-icon>\r\n        </mat-card-title>\r\n        <br />\r\n\r\n        <mat-card-content class=\"align-center\">\r\n          <p>\r\n            contact@bobscomputerrepair.com\r\n         </p>\r\n        </mat-card-content>\r\n      </mat-card>\r\n    </div>\r\n  </div>\r\n</div>\r\n"," /*\r\n * Title: security-question-create.component.ts\r\n * Author: Verlee Washington, Nicole Forke, Janet Blohn, and Joann Saeou\r\n * Date: 10/25/2020\r\n * modified By: Joann Saeou\r\n * Description: this is the typescript file  for security question create configuration page CRUD operation\r\n */\r\n\r\nimport { SecurityQuestionService } from './../../shared/security-question.service';\r\nimport { SecurityQuestion } from './../../shared/security-question.interface';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-security-question-create',\r\n  templateUrl: './security-question-create.component.html',\r\n  styleUrls: ['./security-question-create.component.css']\r\n})\r\nexport class SecurityQuestionCreateComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n\r\n  constructor(private fb: FormBuilder, private router: Router, private securityQuestionService: SecurityQuestionService) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.form = this.fb.group({\r\n      text: [null, Validators.compose([Validators.required])],\r\n    });\r\n  }\r\n\r\n  // tslint:disable-next-line: typedef\r\n  create() {\r\n    const newSecurityQuestion = {} as SecurityQuestion;\r\n    newSecurityQuestion.text = this.form.controls.text.value;\r\n\r\n    this.securityQuestionService.createSecurityQuestion(newSecurityQuestion).subscribe(res => {\r\n      this.router.navigate(['admin/security-questions']);\r\n    }, err => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  cancel() {\r\n    this.router.navigate(['admin/site-maintenance']);\r\n  }\r\n\r\n}\r\n\r\n","<!-- /**\r\n * Title: security-question-create.component.html\r\n * Author: Verlee Washington, Nicole Forke, Janet Blohn, and Joann Saeou\r\n * Date: 10/24/2020\r\n * modified: Joann Saeou\r\n * Modified Style: Nicole Forke 11/01/2020\r\n * Description: this is the html  for security question create configuration page CRUD operation\r\n */ -->\r\n\r\n\r\n\r\n <div fxLayout=\"column\" fxLayoutAlign=\"center center\">\r\n     <br /><br />\r\n    <mat-card class=\"mat-elevation-z8\">\r\n        <mat-card-title>Create Security Questions</mat-card-title>\r\n\r\n        <br/>\r\n\r\n        <form [formGroup]=\"form\" (ngSubmit)=\"create()\" #securityQuestionForm>\r\n            <mat-card-content>\r\n                <div fxLayout=\"column\" fxLayoutGap=\"10px\">\r\n                    <mat-form-field>\r\n                        <input type=\"text\" matInput [formControl]=\"form.controls['text']\" placeholder=\"Create question\">\r\n                    </mat-form-field>\r\n                </div>\r\n            </mat-card-content>\r\n\r\n            <br/>\r\n\r\n            <mat-card-actions align=\"end\">\r\n                <button mat-raised-button (click)=\"cancel()\" color=\"warn\">Cancel</button>\r\n                <button type=\"submit\" mat-raised-button color=\"accent\">Submit</button>\r\n            </mat-card-actions>\r\n\r\n        </form>\r\n    </mat-card>\r\n</div>\r\n","/**\r\n * ======================================================================\r\n * Title: Bob's Computer Repair Shop Capstone\r\n * Author: Nicole Forke, Janet Blohn, and Joann Saeou\r\n * Date: 10/25/2020\r\n * Description: Base Layout Component\r\n * Added logOut method 10/27 Janet\r\n * ======================================================================\r\n */\r\n\r\n /**\r\n  * Import statements\r\n  */\r\n import { Component, OnInit, ElementRef } from '@angular/core';\r\n import { Router } from '@angular/router';\r\n import { CookieService } from 'ngx-cookie-service';\r\n\r\n @Component({\r\n   selector: 'app-base-layout',\r\n   templateUrl: './base-layout.component.html',\r\n   styleUrls: ['./base-layout.component.css']\r\n })\r\n\r\n /**\r\n  * Export component\r\n  */\r\n export class BaseLayoutComponent implements OnInit {\r\n\r\n   year: number = Date.now();\r\n   constructor(private cookieService: CookieService, private router: Router, private elementRef: ElementRef) {\r\n     // Clear cookies if the user hits the \"X\" on their browser instead of logging out\r\n     window.onbeforeunload = function() {\r\n       console.log(this.sessionUser);\r\n       cookieService.deleteAll('sessionUser')\r\n     };\r\n\r\n    }\r\n\r\n   ngOnInit(): void {\r\n   }\r\n\r\n   // Delete cookies on sign out and return to the home screen\r\n   logOut() {\r\n     this.cookieService.deleteAll();\r\n     //this.router.navigate(['/pages/signin']);\r\n     this.router.navigate(['/']);\r\n   }\r\n\r\n }\r\n","<!--\r\n=============================================================\r\n Title:  base-layout.component.html\r\n * Modifiers: Nicole Forke, Janet Blohn, Joann Saeou\r\n * Date: 10/27/2020\r\n * Description: Bobs Computer Repair Services\r\n * HTML for the UserDetails Component\r\n ============================================\r\n * Added links 10/27/20 Janet Blohn\r\n=============================================================\r\n-->\r\n<div fxLayout=\"column\" class=\"page-container\">\r\n\r\n  <!-- navigation -->\r\n  <nav fxFlex>\r\n    <mat-toolbar color=\"accent\" fxLayout=\"row wrap\">\r\n      <mat-toolbar-row>\r\n      <!-- navbar container -->\r\n        <div class=\"navbar-container\">\r\n          <div fxLayout=\"row\" >\r\n            <div class=\"center-nav\">\r\n              <button class=\"navbar-link\" routerLink=\"/\" mat-button style=\"margin-top: 6px;\">Home</button>\r\n              <button class=\"navbar-link\" routerLink=\"/about\" mat-button>About/Contact Us</button>\r\n            </div>\r\n            <!-- logo -->\r\n            <div>\r\n              <button mat-button class=\"logo\" style=\"padding-left: 220px;\">\r\n                <img src=\"./assets/bobsLogo.png\" />\r\n                <h2 class=\"center-name\">Bob's Computer Repair Shop</h2>\r\n              </button>\r\n            </div>\r\n            <div>\r\n              <div class=\"float-end center-nav\">\r\n                <button mat-button class=\"navbar-link\" routerLink=\"/session/signin\" mat-button>Log In</button>\r\n                <button mat-button class=\"navbar-link\" (click)=\"logOut()\">Log Out</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </mat-toolbar-row>\r\n    </mat-toolbar>\r\n  </nav>\r\n\r\n  <!-- main content -->\r\n  <div fxFlex>\r\n    <main class=\"main-content\" fxFlex=\"100%;\">\r\n      <router-outlet></router-outlet>\r\n    </main>\r\n  </div>\r\n</div>\r\n","/**\r\n * ======================================================================\r\n * Title: Bob's Computer Repair Shop Capstone\r\n * Author: Nicole Forke, Janet Blohn, Verlee Washington, and Joann Saeou\r\n * Date: 11/01/2020\r\n * Modified by: Nicole Forke\r\n * Description: Signin Component\r\n * ======================================================================\r\n */\r\n\r\n\r\n/**\r\n * Import statements\r\n */\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-not-found',\r\n  templateUrl: './not-found.component.html',\r\n  styleUrls: ['./not-found.component.css']\r\n})\r\n/**\r\n * Export component\r\n */\r\nexport class NotFoundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div fxLayout=\"column\" fxLayoutAlign=\"center center\">\r\n\r\n    <mat-card fxFlex class=\"mat-elevation-z8\">\r\n    \r\n    <mat-card-title>\r\n        <img src=\"../../../assets/404-not-found-error-image.png\" />\r\n    </mat-card-title>\r\n\r\n    <br />\r\n    \r\n    <mat-card-content fxLayout=\"column\">\r\n        <button mat-raised-button color=\"accent\" routerLink=\"/\">Return home</button>\r\n    </mat-card-content>\r\n\r\n    </mat-card>\r\n</div>\r\n","/**\r\n * ======================================================================\r\n * Title: Bob's Computer Repair Shop Capstone\r\n * Author: Nicole Forke, Janet Blohn, Verlee Washington, and Joann Saeou\r\n * Date: 10/25/2020\r\n * Description: App routing module\r\n * ======================================================================\r\n */\r\n\r\n /**\r\n  * Import routes and root module\r\n  */\r\n\r\n  import { HomeComponent } from './pages/home/home.component';\r\n  import { BaseLayoutComponent } from './shared/base-layout/base-layout.component';\r\n  import { NgModule } from '@angular/core';\r\n  import { Routes, RouterModule } from '@angular/router';\r\n  import { UserCreateComponent } from './pages/user-create/user-create.component';\r\n  import { SecurityQuestionCreateComponent } from './pages/security-question-create/security-question-create.component';\r\n  import { SecurityQuestionDetailsComponent } from './pages/security-question-details/security-question-details.component';\r\n  import { SecurityQuestionListComponent } from './pages/security-question-list/security-question-list.component';\r\n  import { SigninComponent } from './pages/signin/signin.component';\r\n  import { UserListComponent } from './pages/user-list/user-list.component';\r\n  //import { AuthLayoutComponent } from './shared/auth-layout/auth-layout.component';\r\n  import { UserDetailsComponent } from './pages/user-details/user-details.component';\r\n  import { AboutComponent } from './pages/about/about.component';\r\n  import { ResetPasswordFormComponent } from './pages/reset-password-form/reset-password-form.component';\r\n  import { RegisterComponent } from './pages/register/register.component';\r\n  import { VerifySecurityQuestionsFormComponent } from './pages/verify-security-questions-form/verify-security-questions-form.component';\r\n  import { VerifyUsernameFormComponent } from './pages/verify-username-form/verify-username-form.component';\r\n  import { NotFoundComponent } from './pages/not-found/not-found.component';\r\n  import { ServerErrorComponent } from './pages/server-error/server-error.component';\r\n  import { PurchasesByServiceGraphComponent } from './pages/purchases-by-service-graph/purchases-by-service-graph.component'; // Added 11/07/20 Janet\r\n  import { RoleCreateComponent } from './pages/role-create/role-create.component';  //Added 11/07 Janet\r\n  import { RoleListComponent } from './pages/role-list/role-list.component';  //Added 11/07 Janet\r\n  import { RoleDetailsComponent } from './pages/role-details/role-details.component';  //Added 11/07 Janet\r\n  import { AuthGuard } from './shared/auth.guard'; // Added 11/07/20 Janet\r\n  import { RoleGuard } from './shared/role.guard'; // Added 11/07/20 Janet\r\n  import { RepairServicesComponent } from './pages/repair-services/repair-services.component';\r\n  import { SiteMaintenanceComponent } from './pages/site-maintenance/site-maintenance.component'; // Added 11/8/20 Janet\r\n\r\n\r\n  /**\r\n   * Configure routes\r\n   */\r\n\r\n  const routes: Routes = [\r\n    {\r\n      path: '',\r\n      component: BaseLayoutComponent,\r\n      children: [\r\n        {\r\n          path: '',\r\n          component: HomeComponent\r\n        },\r\n        {\r\n          path: 'about',\r\n          component: AboutComponent\r\n        },\r\n\r\n        {\r\n          path: 'repair-services',\r\n          component: RepairServicesComponent\r\n        },\r\n\r\n        // The remaining paths listed as children here will need to be moved to an admin path once one is created. Leaving as is for now.\r\n\r\n\r\n      ],\r\n    },\r\n    {\r\n      path: 'admin',\r\n      component: BaseLayoutComponent,\r\n      children: [\r\n        {\r\n          path: 'site-maintenance',\r\n          component: SiteMaintenanceComponent\r\n        },\r\n        {\r\n          path: 'roles',\r\n          component: RoleListComponent,\r\n          canActivate: [AuthGuard]\r\n        },\r\n        {\r\n          path: 'roles/:roleId',\r\n          component: RoleDetailsComponent,\r\n          canActivate: [AuthGuard]\r\n        },\r\n        {\r\n          path: 'roles/create/new',\r\n          component: RoleCreateComponent ,\r\n          canActivate: [AuthGuard]\r\n        },\r\n        {\r\n          path: 'security-questions',\r\n          component: SecurityQuestionListComponent,\r\n          canActivate: [AuthGuard]\r\n        },\r\n        {\r\n          path: 'security-questions/:questionId',\r\n          component: SecurityQuestionDetailsComponent,\r\n          canActivate: [AuthGuard]\r\n        },\r\n        {\r\n          path: 'security-questions/create/new',\r\n          component: SecurityQuestionCreateComponent,\r\n          canActivate: [AuthGuard]\r\n        },\r\n        {\r\n          path: 'security-questions/list',\r\n          component: SecurityQuestionListComponent,\r\n          canActivate: [AuthGuard]\r\n        },\r\n        {\r\n          path: 'users',\r\n          component: UserListComponent,\r\n          canActivate: [AuthGuard]\r\n        },\r\n        {\r\n          path: 'users/:userName',\r\n          component: UserDetailsComponent,\r\n          canActivate: [AuthGuard]\r\n        },\r\n        {\r\n          path: 'users/create/new',\r\n          component: UserCreateComponent,\r\n          canActivate: [AuthGuard]\r\n        },\r\n        {\r\n          path: 'users/list',\r\n          component: UserListComponent,\r\n          canActivate: [AuthGuard]\r\n        },\r\n        {\r\n          path: 'purchases-by-service-graph',\r\n          component: PurchasesByServiceGraphComponent,\r\n          canActivate: [RoleGuard]\r\n        }\r\n      ]\r\n    },\r\n\r\n    {\r\n      path: 'session',\r\n      //component: AuthLayoutComponent,\r\n      component: BaseLayoutComponent,\r\n      children: [\r\n        {\r\n          path: 'signin',\r\n          component: SigninComponent\r\n        },\r\n        {\r\n          path: 'register',\r\n          component: RegisterComponent\r\n        },\r\n        {\r\n          path: 'forgot',\r\n          component: VerifyUsernameFormComponent\r\n        },\r\n        {\r\n          path: 'verify-security-questions',\r\n          component: VerifySecurityQuestionsFormComponent\r\n        },\r\n        {\r\n          path: 'reset-password',\r\n          component: ResetPasswordFormComponent\r\n        },\r\n        {\r\n          path: '404',\r\n          component: NotFoundComponent\r\n        },\r\n        {\r\n          path: '500',\r\n          component: ServerErrorComponent\r\n        }\r\n      ],\r\n      //canActivate: [AuthGuard]\r\n    },\r\n    {\r\n      path: '**',\r\n      redirectTo: 'session/404'\r\n    }\r\n  ];\r\n\r\n  @NgModule({\r\n    imports: [RouterModule.forRoot(routes, {useHash: true, enableTracing: false, scrollPositionRestoration: 'enabled'})],\r\n    exports: [RouterModule]\r\n  })\r\n\r\n  /**\r\n   * Export module\r\n   */\r\n  export class AppRoutingModule { }\r\n","/**\r\n * ======================================================================\r\n * Title: service-repair.service.ts\r\n * Author: Nicole Forke, Janet Blohn and Joann Saeou\r\n * Date: 11/06/2020\r\n * Modified by: Joann Saeou\r\n * Description: Group 1 - BCRS - service showing repair service\r\n * ======================================================================\r\n */\r\n\r\n\r\n/**\r\n * Import statements\r\n */\r\nimport { ServiceRepairItem } from './service-repair-item.interface';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ServiceRepairService {\r\n\r\n  ServiceRepairItems: ServiceRepairItem[];\r\n\r\n  constructor() {\r\n    this.ServiceRepairItems = [\r\n\r\n      {\r\n        id: '101',\r\n        title: 'Password Reset',\r\n        price: 39.99\r\n      },\r\n      {\r\n        id: '102',\r\n        title: 'Spyware Removal',\r\n        price: 99.99\r\n      },\r\n      {\r\n        id: '103',\r\n        title: 'RAM Upgrade',\r\n        price: 129.99\r\n      },\r\n      {\r\n        id: '104',\r\n        title: 'Software Installation',\r\n        price: 49.99\r\n      },\r\n      {\r\n        id: '105',\r\n        title: 'PC Tune-up',\r\n        price: 89.99\r\n      },\r\n      {\r\n        id: '106',\r\n        title: 'Keyboard Cleaning',\r\n        price: 45.00\r\n      },\r\n      {\r\n        id: '107',\r\n        title: 'Disk Clean-Up',\r\n        price: 149.99\r\n      }\r\n\r\n    ]\r\n  }\r\n\r\n  /**\r\n   * funtion to get the service repair items\r\n   */\r\n  getServiceRepairItems(): ServiceRepairItem[] {\r\n    return this.ServiceRepairItems;\r\n  }\r\n}\r\n","/*\r\n============================================\r\n; Title:  about.component.ts\r\n; Authors: Nicole Forke, Janet Blohn, and Joann Saeou\r\n; Date:   14 November 2020\r\n; Added By: Nicole Forke\r\n; Description: Bob's Computer Repair Services Project\r\n; Typescript for Verify Username Form Component\r\n============================================\r\n*/\r\n\r\n/**\r\n * Import statements\r\n */\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-verify-username-form',\r\n  templateUrl: './verify-username-form.component.html',\r\n  styleUrls: ['./verify-username-form.component.css']\r\n})\r\n\r\n/**\r\n * Export component\r\n */\r\nexport class VerifyUsernameFormComponent implements OnInit {\r\n\r\n  form: FormGroup;\r\n  errorMessage: string; // added by Nicole Forke\r\n\r\n  constructor(private http: HttpClient, private fb: FormBuilder, private router: Router) {\r\n   }\r\n\r\n  ngOnInit() {\r\n    this.form = this.fb.group({\r\n      userName: [null, Validators.compose([Validators.required])]\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Function to validate userName\r\n   */\r\n  validateUsername() {\r\n    const userName = this.form.controls['userName'].value;\r\n\r\n    this.http.get('/api/session/verify/users/' + userName).subscribe(res => {\r\n      if (res['data']) {\r\n\r\n        this.router.navigate(['/session/verify-security-questions'], {queryParams: {userName: userName}, skipLocationChange: true});\r\n      } else {\r\n        this.errorMessage = \"The username entered does not match our records. Please try again.\"; // added by Nicole Forke\r\n      }\r\n    }, err => {\r\n      console.log(err);\r\n      this.errorMessage = err; // added by Nicole Forke\r\n    });\r\n  }\r\n}\r\n","<br /> <br />\r\n<div fxLayout=\"row wrap\" fxLayoutAlign=\"center start\">\r\n    <div fxFlex.gt-sm=\"55\" fxFlex=\"100\">\r\n        <mat-card class=\"mat-elevation-z6 verify-username\">\r\n\r\n            <mat-card-title class=\"title\" style=\"text-align: center; font-size: 24px;\"><b>Submit Username</b></mat-card-title>\r\n\r\n            <form [formGroup]=\"form\" (ngSubmit)=\"validateUsername()\" #userForm>\r\n\r\n                <mat-card-content>\r\n                    <div fxLayout=\"column\" fxLayoutGap=\"10px\">\r\n                        <mat-form-field>\r\n                         <input type=\"text\"\r\n                                matInput [formControl]=\"form.controls['userName']\"\r\n                                placeholder=\"Username\" />\r\n                        </mat-form-field>\r\n                        <div class=\"msg-error\" style=\"color: #d8000c;\"> {{ errorMessage }} </div>\r\n                    </div>\r\n                </mat-card-content>\r\n\r\n                <mat-card-actions fxLayoutAlign=\"end\">\r\n                    <button type=\"submit\" mat-raised-button [disabled]=\"!form.valid\" style=\"background-color: #04B504\" color=\"#000000\">Submit</button>\r\n                </mat-card-actions>\r\n            </form>\r\n        </mat-card>\r\n    </div>\r\n</div>","\r\n/*\r\n===================================================\r\n* Title: error.component.ts\r\n* Author: Professor Krasso\r\n* Date: 23 October 2020\r\n* Modifiers: Joann Saeou\r\n* Description: Group 1: Sprint 2  (BCRS) - error pages\r\n===================================================\r\n*/\r\n\r\n\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-error',\r\n  templateUrl: './error.component.html',\r\n  styleUrls: ['./error.component.css']\r\n})\r\nexport class ErrorComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>error works!</p>\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}